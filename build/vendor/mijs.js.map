{"version":3,"file":"vendor/mijs.js","mappings":"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","sources":["webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/media.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/states.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/array/empty/empty.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/arrayLike/slice/slice.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/function/apply/apply.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/function/noop/noop.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/function/nextTick/nextTick.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/function/raf/raf.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/type/type.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/array/toArray/toArray.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/array/forEach/forEach.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/array/includes/includes.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/array/push/push.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/toggleClass/toggleClass.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/addClass/addClass.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/append/append.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/before/before.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/matches/matches.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/children/children.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/child/child.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/object/ownKeys/ownKeys.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/object/forOwn/forOwn.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/object/assign/assign.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/object/merge/merge.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/object/omit/omit.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/removeAttribute/removeAttribute.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/setAttribute/setAttribute.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/create/create.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/style/style.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/display/display.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/focus/focus.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/getAttribute/getAttribute.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/hasClass/hasClass.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/rect/rect.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/remove/remove.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/parseHtml/parseHtml.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/prevent/prevent.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/query/query.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/queryAll/queryAll.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/removeClass/removeClass.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/timeOf/timeOf.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/unit/unit.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/project.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/error/assert/assert.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/math/math/math.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/math/approximatelyEqual/approximatelyEqual.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/math/between/between.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/math/clamp/clamp.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/math/sign/sign.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/string/format/format.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/string/pad/pad.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/string/uniqueId/uniqueId.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constructors/EventBinder/EventBinder.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/events.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constructors/EventInterface/EventInterface.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constructors/RequestInterval/RequestInterval.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constructors/State/State.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/arrows.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/directions.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Direction/Direction.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/attributes.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/classes.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Drag/constants.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/types.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Slides/Slide.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Autoplay/constants.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/listener-options.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/normalizeKey/normalizeKey.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Keyboard/Keyboard.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/LazyLoad/constants.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Sync/Sync.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Media/Media.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Elements/Elements.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/utils/dom/closest/closest.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Slides/Slides.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Layout/Layout.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constructors/Throttle/Throttle.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Clones/Clones.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Move/Move.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Controller/Controller.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Arrows/Arrows.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Arrows/path.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Autoplay/Autoplay.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Cover/Cover.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Scroll/Scroll.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Scroll/constants.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Drag/Drag.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/LazyLoad/LazyLoad.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Pagination/Pagination.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Wheel/Wheel.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/components/Live/Live.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/defaults.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/constants/i18n.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/transitions/Fade/Fade.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/transitions/Slide/Slide.ts","webpack://sev-el-block/./src/vendor/splide-4.0.2/src/js/core/Splide/Splide.ts","webpack://sev-el-block/webpack/bootstrap","webpack://sev-el-block/webpack/runtime/compat get default export","webpack://sev-el-block/webpack/runtime/define property getters","webpack://sev-el-block/webpack/runtime/hasOwnProperty shorthand","webpack://sev-el-block/webpack/runtime/make namespace object","webpack://sev-el-block/./src/vendor/mijs.js"],"sourcesContent":["export const MEDIA_PREFERS_REDUCED_MOTION = '(prefers-reduced-motion: reduce)';","/**\r\n * Splide has been just created.\r\n */\r\nexport const CREATED = 1;\r\n\r\n/**\r\n * Splide has mounted components.\r\n */\r\nexport const MOUNTED = 2;\r\n\r\n/**\r\n * Splide is ready.\r\n */\r\nexport const IDLE = 3;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const MOVING = 4;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const SCROLLING = 5;\r\n\r\n/**\r\n * The user is dragging the slider.\r\n */\r\nexport const DRAGGING = 6;\r\n\r\n/**\r\n * Splide has been destroyed.\r\n */\r\nexport const DESTROYED = 7;\r\n\r\n/**\r\n * The collection of all states.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATES = {\r\n  CREATED,\r\n  MOUNTED,\r\n  IDLE,\r\n  MOVING,\r\n  SCROLLING,\r\n  DRAGGING,\r\n  DESTROYED,\r\n};\r\n","/**\r\n * Empties the array.\r\n *\r\n * @param array - A array to empty.\r\n */\r\nexport function empty( array: any[] ): void {\r\n  array.length = 0;\r\n}\r\n","/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return Array.prototype.slice.call( arrayLike, start, end );\r\n}\r\n","import { AnyFunction, ShiftN } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Create a function where provided arguments are bound.\r\n * `this` parameter will be always null.\r\n *\r\n * @param func - A function.\r\n * @param args - Arguments to bind to the function.\r\n *\r\n * @return A function where arguments are bound.\r\n */\r\nexport function apply<F extends AnyFunction, A extends any[] = any[]>(\r\n  func: F,\r\n  ...args: A\r\n): ( ...args: ShiftN<Parameters<F>, A[\"length\"]> ) => ReturnType<F>;\r\n\r\n/**\r\n * Create a function where provided arguments are bound.\r\n * `this` parameter will be always null.\r\n *\r\n * @param func - A function.\r\n */\r\nexport function apply( func: AnyFunction ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  return func.bind( null, ...slice( arguments, 1 ) );\r\n}\r\n","/**\r\n * No operation.\r\n */\r\nexport const noop = (): void => {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\r\n","import { AnyFunction } from '../../../types';\r\n\r\n\r\n/**\r\n * Invokes the callback on the next tick.\r\n *\r\n * @param callback - A callback function.\r\n */\r\nexport const nextTick: ( callback: AnyFunction ) => ReturnType<typeof setTimeout> = setTimeout;\r\n","/**\r\n * The arias of `window.requestAnimationFrame()`.\r\n */\r\nexport function raf( func: FrameRequestCallback ): number {\r\n  return requestAnimationFrame( func );\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { apply } from '../function';\r\n\r\n\r\n/**\r\n * The alias of the type check function.\r\n *\r\n * @param type    - A type.\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is the specified type.\r\n */\r\nfunction typeOf( type: string, subject: unknown ): boolean {\r\n  return typeof subject === type;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an object or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an object, or otherwise `false`.\r\n */\r\nexport function isObject( subject: unknown ): subject is object {\r\n  return ! isNull( subject ) && typeOf( 'object', subject );\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an array or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an array, or otherwise `false`.\r\n */\r\nexport const isArray: <T>( subject: unknown ) => subject is T[] = Array.isArray;\r\n\r\n/**\r\n * Checks if the given subject is a function or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a function, or otherwise `false`.\r\n */\r\nexport const isFunction = <( subject: unknown ) => subject is AnyFunction>apply( typeOf, 'function' );\r\n\r\n/**\r\n * Checks if the given subject is a string or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a string, or otherwise `false`.\r\n */\r\nexport const isString = <( subject: unknown ) => subject is string>apply( typeOf, 'string' );\r\n\r\n/**\r\n * Checks if the given subject is `undefined` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `undefined`, or otherwise `false`.\r\n */\r\nexport const isUndefined = <( subject: unknown ) => subject is undefined>apply( typeOf, 'undefined' );\r\n\r\n/**\r\n * Checks if the given subject is `null` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `null`, or otherwise `false`.\r\n */\r\nexport function isNull( subject: unknown ): subject is null {\r\n  return subject === null;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\r\n */\r\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\r\n  return subject instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLButtonElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\r\n */\r\nexport function isHTMLButtonElement( subject: unknown ): subject is HTMLButtonElement {\r\n  return subject instanceof HTMLButtonElement;\r\n}\r\n","import { isArray } from '../../type/type';\r\n\r\n\r\n/**\r\n * Push the provided value to an array if the value is not an array.\r\n *\r\n * @param value - A value to push.\r\n *\r\n * @return An array containing the value, or the value itself if it is already an array.\r\n */\r\nexport function toArray<T>( value: T | T[] ): T[] {\r\n  return isArray( value ) ? value : [ value ];\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\r\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\r\n  toArray( values ).forEach( iteratee );\r\n}\r\n","/**\r\n * Checks if the array includes the value or not.\r\n * `Array#includes` is not supported by IE.\r\n *\r\n * @param array - An array.\r\n * @param value - A value to search for.\r\n *\r\n * @return `true` if the array includes the value, or otherwise `false`.\r\n */\r\nexport function includes<T>( array: T[], value: T ): boolean {\r\n  return array.indexOf( value ) > -1;\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * Extended `Array#push()` that accepts an item or an array with items.\r\n *\r\n * @param array - An array to push items.\r\n * @param items - An item or items to push.\r\n *\r\n * @return A provided array itself.\r\n */\r\nexport function push<T>( array: T[], items: T | T[] ): T[] {\r\n  array.push( ...toArray( items ) );\r\n  return array;\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Toggles the provided class or classes by following the `add` boolean.\r\n *\r\n * @param elm     - An element whose classes are toggled.\r\n * @param classes - A class or class names.\r\n * @param add     - Whether to add or remove a class.\r\n */\r\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\r\n  if ( elm ) {\r\n    forEach( classes, name => {\r\n      if ( name ) {\r\n        elm.classList[ add ? 'add' : 'remove' ]( name );\r\n      }\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Adds classes to the element.\r\n *\r\n * @param elm     - An element to add classes to.\r\n * @param classes - Classes to add.\r\n */\r\nexport function addClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, isString( classes ) ? classes.split( ' ' ) : classes, true );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Appends children to the parent element.\r\n *\r\n * @param parent   - A parent element.\r\n * @param children - A child or children to append to the parent.\r\n */\r\nexport function append( parent: Element, children: Node | Node[] ): void {\r\n  forEach( children, parent.appendChild.bind( parent ) );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Inserts a node or nodes before the specified reference node.\r\n *\r\n * @param nodes - A node or nodes to insert.\r\n * @param ref   - A reference node.\r\n */\r\nexport function before( nodes: Node | Node[], ref: Node | null ): void {\r\n  forEach( nodes, node => {\r\n    const parent = ( ref || node ).parentNode;\r\n\r\n    if ( parent ) {\r\n      parent.insertBefore( node, ref );\r\n    }\r\n  } );\r\n}\r\n","import { isHTMLElement } from '../../type/type';\r\n\r\n\r\n/**\r\n * Checks if the element can be selected by the provided selector or not.\r\n *\r\n * @param elm      - An element to check.\r\n * @param selector - A selector to test.\r\n *\r\n * @return `true` if the selector matches the element, or otherwise `false`.\r\n */\r\nexport function matches( elm: Element | EventTarget, selector: string ): boolean {\r\n  return isHTMLElement( elm ) && ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Finds children that has the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - Optional. A selector to filter children.\r\n *\r\n * @return An array with filtered children.\r\n */\r\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E[] {\r\n  const children = parent ? slice( parent.children ) as E[] : [];\r\n  return selector ? children.filter( child => matches( child, selector ) ) : children;\r\n}\r\n","import { children } from '../children/children';\r\n\r\n\r\n/**\r\n * Returns a child element that matches the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return A matched child element if available, or otherwise `undefined`.\r\n */\r\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\r\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\r\n}\r\n","/**\r\n * An alias of Object.keys\r\n */\r\nexport const ownKeys = Object.keys;","import { ownKeys } from '../ownKeys/ownKeys';\r\n\r\n\r\n/**\r\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\r\n *\r\n * @param object   - An object to iterate over.\r\n * @param iteratee - An iteratee function that takes the value and key as arguments.\r\n * @param right    - If `true`, the method iterates over the object from the end like `forEachRight()`.\r\n *\r\n * @return A provided object itself.\r\n */\r\nexport function forOwn<T extends object>(\r\n  object: T,\r\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void,\r\n  right?: boolean\r\n): T {\r\n  if ( object ) {\r\n    let keys = ownKeys( object );\r\n    keys = right ? keys.reverse() : keys;\r\n\r\n    for ( let i = 0; i < keys.length; i++ ) {\r\n      const key = keys[ i ];\r\n\r\n      if ( key !== '__proto__' ) {\r\n        if ( iteratee( object[ key ], key ) === false ) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return object;\r\n}\r\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Assigns U to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - An object to assign.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assign<T, U> = Omit<T, keyof U> & U;\r\n\r\n/**\r\n * Recursively assigns U[] to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - A tuple contains objects.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assigned<T extends object, U extends object[], N extends number, C extends any[] = []> = {\r\n  0: T,\r\n  1: Assigned<Assign<T, Head<U>>, Shift<U>, N, Push<C>>,\r\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\r\n\r\nexport function assign<T extends object>( object: T ): T;\r\n\r\nexport function assign<T extends object, U extends object[]>(\r\n  object: T,\r\n  ...sources: U\r\n): Resolve<Assigned<T, U, U['length']>>\r\n\r\n/**\r\n * Assigns all own enumerable properties of all source objects to the provided object.\r\n * `undefined` in source objects will be skipped.\r\n *\r\n * @param object - An object to assign properties to.\r\n *\r\n * @return An object assigned properties of the sources to.\r\n */\r\nexport function assign<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      object[ key ] = source[ key ];\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\nimport { isArray, isObject } from '../../type/type';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Merges U to T.\r\n *\r\n * @typeParam T - An object to merge U into.\r\n * @typeParam U - An object to merge properties from.\r\n *\r\n * @return A merged object type.\r\n */\r\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\r\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\r\n    ? U[ K ] extends any[]\r\n      ? U[ K ]\r\n      : T[ K ] extends object\r\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Resolve<Cast<A, object>> : never\r\n        : U[ K ]\r\n    : U[ K ];\r\n} & Omit<U, keyof T>;\r\n\r\n/**\r\n * Recursively merges U[] to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - A tuple contains objects.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Merged<T extends object, U extends object[], N extends number, C extends any[] = []> = {\r\n  0: T,\r\n  1: Merged<Merge<T, Head<U>>, Shift<U>, N, Push<C>>,\r\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\r\n\r\nexport function merge<T extends object>( object: T ): T;\r\n\r\nexport function merge<T extends object, U extends object[]>(\r\n  object: T,\r\n  ...sources: U\r\n): Resolve<Merged<T, U, U['length']>>\r\n\r\n/**\r\n * Recursively merges source properties to the object.\r\n * Be aware that this method does not merge arrays. They are just duplicated by `slice()`.\r\n *\r\n * @param object - An object to merge properties to.\r\n *\r\n * @return A new object with merged properties.\r\n */\r\nexport function merge<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      if ( isArray( value ) ) {\r\n        object[ key ] = value.slice();\r\n      } else if ( isObject( value ) ) {\r\n        object[ key ] = merge( {}, isObject( object[ key ] ) ? object[ key ] : {}, value );\r\n      } else {\r\n        object[ key ] = value;\r\n      }\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { toArray } from '../../array';\r\nimport { ownKeys } from '../ownKeys/ownKeys';\r\n\r\n\r\n/**\r\n * Deletes specified own keys from the object.\r\n *\r\n * @param object - An object.\r\n * @param keys   - A key or keys to delete. If not specified, all own enumerable keys will be deleted.\r\n */\r\nexport function omit( object: object, keys?: string | string[] ): void {\r\n  toArray( keys || ownKeys( object ) ).forEach( key => {\r\n    delete object[ key ];\r\n  } );\r\n}","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes attributes from the element.\r\n *\r\n * @param elms  - An element or elements.\r\n * @param attrs - An attribute or attributes to remove.\r\n */\r\nexport function removeAttribute( elms: Element | Element[], attrs: string | string[] ): void {\r\n  forEach( elms, elm => {\r\n    forEach( attrs, attr => {\r\n      elm && elm.removeAttribute( attr );\r\n    } );\r\n  } );\r\n}\r\n","import { forEach } from '../../array';\r\nimport { forOwn } from '../../object';\r\nimport { isNull, isObject } from '../../type/type';\r\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\r\n\r\n\r\nexport function setAttribute( elms: Element | Element[], attr: string, value: string | number | boolean ): void;\r\nexport function setAttribute( elms: Element | Element[], attrs: Record<string, string | number | boolean> ): void;\r\n\r\n/**\r\n * Sets attribute/attributes to the element or elements.\r\n * If the value is `null` or an empty string, the attribute will be removed.\r\n *\r\n * @param elms  - An element or an array with elements.\r\n * @param attrs - An attribute name of an object with pairs of a name and a value.\r\n * @param value - A value to set.\r\n */\r\nexport function setAttribute(\r\n  elms: Element | Element[],\r\n  attrs: string | Record<string, string | number | boolean>,\r\n  value?: string | number | boolean\r\n): void {\r\n  if ( isObject( attrs ) ) {\r\n    forOwn( attrs, ( value, name ) => {\r\n      setAttribute( elms, name, value );\r\n    } );\r\n  } else {\r\n    forEach( elms, elm => {\r\n      isNull( value ) || value === '' ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { addClass } from '../addClass/addClass';\r\nimport { append } from '../append/append';\r\nimport { setAttribute } from '../setAttribute/setAttribute';\r\n\r\n\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ];\r\n\r\nexport function create(\r\n  tag: string,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElement;\r\n\r\n/**\r\n * Creates a HTML element.\r\n *\r\n * @param tag    - A tag name.\r\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\r\n * @param parent - Optional. A parent element where the created element is appended.\r\n */\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ] {\r\n  const elm = document.createElement( tag );\r\n\r\n  if ( attrs ) {\r\n    isString( attrs ) ? addClass( elm, attrs ) : setAttribute( elm, attrs );\r\n  }\r\n\r\n  parent && append( parent, elm );\r\n\r\n  return elm;\r\n}\r\n","import { isNull, isUndefined } from '../../type/type';\r\n\r\n\r\nexport function style<K extends keyof CSSStyleDeclaration>(\r\n  elm: HTMLElement,\r\n  prop: K,\r\n): CSSStyleDeclaration[ K ];\r\n\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n): string;\r\n\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n  value: string | number\r\n): void;\r\n\r\n\r\n/**\r\n * Applies inline styles to the provided element by an object literal.\r\n *\r\n * @param elm   - An element to apply styles to.\r\n * @param prop  - An object literal with styles or a property name.\r\n * @param value - A value to set.\r\n */\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n  value?: string | number\r\n): string | void {\r\n  if ( isUndefined( value ) ) {\r\n    return getComputedStyle( elm )[ prop ];\r\n  }\r\n\r\n  if ( ! isNull( value ) ) {\r\n    elm.style[ prop ] = `${ value }`;\r\n  }\r\n}\r\n","import { style } from '../style/style';\r\n\r\n\r\n/**\r\n * Sets the `display` CSS value to the element.\r\n *\r\n * @param elm     - An element to set a new value to.\r\n * @param display - A new `display` value.\r\n */\r\nexport function display( elm: HTMLElement, display: string ): void {\r\n  style( elm, 'display', display );\r\n}\r\n","/**\r\n * Focuses the provided element without scrolling the ascendant element.\r\n *\r\n * @param elm - An element to focus.\r\n */\r\nexport function focus( elm: HTMLElement ): void {\r\n  elm[ 'setActive' ] && elm[ 'setActive' ]() || elm.focus( { preventScroll: true } );\r\n}\r\n","/**\r\n * Returns the specified attribute value.\r\n *\r\n * @param elm  - An element.\r\n * @param attr - An attribute to get.\r\n */\r\nexport function getAttribute( elm: Element, attr: string ): string | null {\r\n  return elm.getAttribute( attr );\r\n}\r\n","/**\r\n * Checks if the element contains the specified class or not.\r\n *\r\n * @param elm       - An element to check.\r\n * @param className - A class name that may be contained by the element.\r\n *\r\n * @return `true` if the element contains the class, or otherwise `false`.\r\n */\r\nexport function hasClass( elm: Element, className: string ): boolean {\r\n  return elm && elm.classList.contains( className );\r\n}\r\n","/**\r\n * Returns a DOMRect object of the provided element.\r\n *\r\n * @param target - An element.\r\n */\r\nexport function rect( target: Element ): DOMRect {\r\n  return target.getBoundingClientRect();\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes the provided node from its parent.\r\n *\r\n * @param nodes - A node or nodes to remove.\r\n */\r\nexport function remove( nodes: Node | Node[] ): void {\r\n  forEach( nodes, node => {\r\n    if ( node && node.parentNode ) {\r\n      node.parentNode.removeChild( node );\r\n    }\r\n  } );\r\n}\r\n","import { child } from '../child/child';\r\n\r\n\r\n/**\r\n * Parses the provided HTML string and returns the first element.\r\n *\r\n * @param html - An HTML string to parse.\r\n *\r\n * @return An Element on success, or otherwise `undefined`.\r\n */\r\nexport function parseHtml<E extends HTMLElement>( html: string ): E | undefined {\r\n  return child<E>( new DOMParser().parseFromString( html, 'text/html' ).body );\r\n}\r\n","/**\r\n * Call the `preventDefault()` of the provided event.\r\n *\r\n * @param e               - An Event object.\r\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\r\n */\r\nexport function prevent( e: Event, stopPropagation?: boolean ): void {\r\n  e.preventDefault();\r\n\r\n  if ( stopPropagation ) {\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n  }\r\n}\r\n","/**\r\n * Returns an element that matches the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return A found element or `null`.\r\n */\r\nexport function query<E extends Element = Element>( parent: Element | Document, selector: string ): E | null {\r\n  return parent && parent.querySelector( selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Returns elements that match the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return An array with matched elements.\r\n */\r\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector?: string ): E[] {\r\n  return selector ? slice<E>( parent.querySelectorAll( selector ) ) : [];\r\n}\r\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","/**\r\n * Extracts the timestamp from the event object.\r\n *\r\n * @param e - An Event object.\r\n */\r\nexport function timeOf( e: Event ): number {\r\n  return e.timeStamp;\r\n}","import { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * Appends `px` to the provided number.\r\n * If the value is already string, just returns it.\r\n *\r\n * @param value - A value to append `px` to.\r\n *\r\n * @return A string with the CSS unit.\r\n */\r\nexport function unit( value: number | string ): string {\r\n  return isString( value ) ? value : value ? `${ value }px` : '';\r\n}\r\n","/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const PROJECT_CODE = 'splide';\r\n\r\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\r\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\r\nexport function assert( condition: any, message?: string ): void {\r\n  if ( ! condition ) {\r\n    throw new Error( `[${ PROJECT_CODE }] ${ message || '' }` );\r\n  }\r\n}\r\n","export const { min, max, floor, ceil, abs } = Math;\r\n","import { abs } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the provided 2 numbers are approximately equal or not.\r\n *\r\n * @param x       - A number.\r\n * @param y       - Another number to compare.\r\n * @param epsilon - An accuracy that defines the approximation.\r\n *\r\n * @return `true` if 2 numbers are considered to be equal, or otherwise `false`.\r\n */\r\nexport function approximatelyEqual( x: number, y: number, epsilon: number ): boolean {\r\n  return abs( x - y ) < epsilon;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the subject number is between `minOrMax` and `maxOrMin`.\r\n *\r\n * @param number    - A subject number to check.\r\n * @param minOrMax  - A min or max number.\r\n * @param maxOrMin  - A max or min number.\r\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\r\n */\r\nexport function between( number: number, minOrMax: number, maxOrMin: number, exclusive?: boolean ): boolean {\r\n  const minimum = min( minOrMax, maxOrMin );\r\n  const maximum = max( minOrMax, maxOrMin );\r\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n */\r\nexport function clamp( number: number, x: number, y: number ): number {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return min( max( minimum, number ), maximum );\r\n}\r\n","/**\r\n * Returns the sign of the provided number.\r\n *\r\n * @param x - A number.\r\n *\r\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\r\n */\r\nexport function sign( x: number ): number {\r\n  return +( x > 0 ) - +( x < 0 );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Formats a string.\r\n *\r\n * @param string       - A string to format.\r\n * @param replacements - A replacement or replacements.\r\n *\r\n * @return A formatted string.\r\n */\r\nexport function format( string: string, replacements: string | number | Array<string | number> ): string {\r\n  forEach( replacements, replacement => {\r\n    string = string.replace( '%s', `${ replacement }` );\r\n  } );\r\n\r\n  return string;\r\n}\r\n","/**\r\n * Pads the number with 0.\r\n *\r\n * @param number - A number to pad.\r\n *\r\n * @return string - Padded number.\r\n */\r\nexport function pad( number: number ): string {\r\n  return number < 10 ? `0${ number }` : `${ number }`;\r\n}\r\n","import { pad } from '../pad/pad';\r\n\r\n\r\n/**\r\n * Stores unique IDs.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst ids: Record<string, number> = {};\r\n\r\n/**\r\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\r\n *\r\n * @param prefix - A prefix for the ID.\r\n */\r\nexport function uniqueId( prefix: string ): string {\r\n  return `${ prefix }${ pad( ( ids[ prefix ] = ( ids[ prefix ] || 0 ) + 1 ) ) }`;\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { empty, forEach } from '../../utils';\r\n\r\n\r\n/**\r\n * The type for an EventTarget or an array with EventTarget objects.\r\n *\r\n * @since 4.0.0\r\n */\r\ntype EventTargets = EventTarget | EventTarget[];\r\n\r\n/**\r\n * The interface for the EventBinder object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface EventBinderObject {\r\n  bind( target: EventTargets, events: string | string[], callback: AnyFunction, options?: AddEventListenerOptions ): void\r\n  unbind( target: EventTarget | EventTarget[], events: string | string[], callback?: AnyFunction ): void;\r\n  dispatch<T>( target: EventTarget, event: string, detail?: T ): void;\r\n  destroy(): void;\r\n}\r\n\r\n/**\r\n * The constructor function to provide methods to subscribe native events.\r\n *\r\n * @since 4.0.0\r\n * @constructor\r\n *\r\n * @return An EventBinder object.\r\n */\r\nexport function EventBinder(): EventBinderObject {\r\n  /**\r\n   * Stores all handlers that listen to native events.\r\n   * `[ target, event, namespace, callback, remover ]`\r\n   */\r\n  let listeners: [ EventTarget, string, string | undefined, AnyFunction, () => void ][] = [];\r\n\r\n  /**\r\n   * Listens to native events.\r\n   * - `destroy()` can unsubscribe all events.\r\n   * - In IE, mediaQueryList does not inherit EventTarget,\r\n   *   and only supports deprecated `addListener` and `removeListener`.\r\n   *\r\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event or events to listen to.\r\n   * @param callback - A callback function.\r\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\r\n   */\r\n  function bind(\r\n    targets: EventTargets,\r\n    events: string | string[],\r\n    callback: AnyFunction,\r\n    options?: AddEventListenerOptions\r\n  ): void {\r\n    forEachEvent( targets, events, ( target, event, namespace ) => {\r\n      const isEventTarget = 'addEventListener' in target;\r\n      const remover = isEventTarget\r\n        ? target.removeEventListener.bind( target, event, callback, options )\r\n        : target[ 'removeListener' ].bind( target, callback );\r\n\r\n      isEventTarget ? target.addEventListener( event, callback, options ) : target[ 'addListener' ]( callback );\r\n      listeners.push( [ target, event, namespace, callback, remover ] );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Removes the event handler.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names to remove.\r\n   * @param callback - Optional. Specify the callback to remove.\r\n   */\r\n  function unbind( targets: EventTargets, events: string | string[], callback?: AnyFunction ): void {\r\n    forEachEvent( targets, events, ( target, event, namespace ) => {\r\n      listeners = listeners.filter( listener => {\r\n        if ( listener[ 0 ] === target\r\n          && listener[ 1 ] === event\r\n          && listener[ 2 ] === namespace\r\n          && ( ! callback || listener[ 3 ] === callback )\r\n        ) {\r\n          listener[ 4 ]();\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Dispatches a custom event of the target.\r\n   *\r\n   * @param target - An event target.\r\n   * @param type   - An event type.\r\n   * @param detail - Optional. The `detail` object of the event.\r\n   *\r\n   * @return An event object.\r\n   */\r\n  function dispatch<T>( target: EventTarget, type: string, detail?: T ): CustomEvent {\r\n    let e: CustomEvent;\r\n    const bubbles = true;\r\n\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      e = new CustomEvent( type, { bubbles, detail } );\r\n    } else {\r\n      e = document.createEvent( 'CustomEvent' );\r\n      e.initCustomEvent( type, bubbles, false, detail );\r\n    }\r\n\r\n    target.dispatchEvent( e );\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * Iterates over each target and event.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names.\r\n   * @param iteratee - An iteratee function.\r\n   */\r\n  function forEachEvent(\r\n    targets: EventTargets,\r\n    events: string | string[],\r\n    iteratee: ( target: EventTarget, event: string, namespace: string | undefined ) => void\r\n  ): void {\r\n    forEach( targets, target => {\r\n      target && forEach( events, events => {\r\n        events.split( ' ' ).forEach( eventNS => {\r\n          const fragment = eventNS.split( '.' );\r\n          iteratee( target, fragment[ 0 ], fragment[ 1 ] );\r\n        } );\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners.\r\n   */\r\n  function destroy(): void {\r\n    listeners.forEach( data => { data[ 4 ]() } );\r\n    empty( listeners );\r\n  }\r\n\r\n  return {\r\n    bind,\r\n    unbind,\r\n    dispatch,\r\n    destroy,\r\n  };\r\n}\r\n","export const EVENT_MOUNTED            = 'mounted';\r\nexport const EVENT_READY              = 'ready';\r\nexport const EVENT_MOVE               = 'move';\r\nexport const EVENT_MOVED              = 'moved';\r\nexport const EVENT_SHIFTED            = 'shifted';\r\nexport const EVENT_CLICK              = 'click';\r\nexport const EVENT_ACTIVE             = 'active';\r\nexport const EVENT_INACTIVE           = 'inactive';\r\nexport const EVENT_VISIBLE            = 'visible';\r\nexport const EVENT_HIDDEN             = 'hidden';\r\nexport const EVENT_SLIDE_KEYDOWN      = 'slide:keydown';\r\nexport const EVENT_REFRESH            = 'refresh';\r\nexport const EVENT_UPDATED            = 'updated';\r\nexport const EVENT_RESIZE             = 'resize';\r\nexport const EVENT_RESIZED            = 'resized';\r\nexport const EVENT_DRAG               = 'drag';\r\nexport const EVENT_DRAGGING           = 'dragging';\r\nexport const EVENT_DRAGGED            = 'dragged';\r\nexport const EVENT_SCROLL             = 'scroll';\r\nexport const EVENT_SCROLLED           = 'scrolled';\r\nexport const EVENT_DESTROY            = 'destroy';\r\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\r\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\r\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\r\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\r\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\r\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\r\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\r\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\r\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\r\n\r\n","import { EVENT_DESTROY } from '../../constants/events';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, EventMap } from '../../types';\r\nimport { apply, assign, isArray, slice, toArray } from '../../utils';\r\nimport { EventBinder, EventBinderObject } from '../EventBinder/EventBinder';\r\n\r\n\r\n/**\r\n * The interface for the EventInterface object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface EventInterfaceObject extends EventBinderObject {\r\n  on<K extends keyof EventMap>( event: K, callback: EventMap[ K ] ): void;\r\n  on( events: string | string[], callback: AnyFunction ): void;\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): void;\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): void\r\n  emit( event: string, ...args: any[] ): void;\r\n\r\n  /** @internal */\r\n  bus: DocumentFragment;\r\n}\r\n\r\n/**\r\n * The constructor function that provides interface for internal and native events.\r\n *\r\n * @since 3.0.0\r\n * @constructor\r\n *\r\n * @param Splide - A Splide instance.\r\n *\r\n * @return A collection of interface functions.\r\n */\r\nexport function EventInterface( Splide?: Splide ): EventInterfaceObject {\r\n  /**\r\n   * The document fragment for internal events.\r\n   * Provide the Splide instance to share the bus.\r\n   */\r\n  const bus = Splide ? Splide.event.bus : document.createDocumentFragment();\r\n\r\n  /**\r\n   * An event binder object.\r\n   */\r\n  const binder = EventBinder();\r\n\r\n  /**\r\n   * Listens to an internal event or events.\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   * @param callback - A callback function to register.\r\n   */\r\n  function on( events: string | string[], callback: AnyFunction ): void {\r\n    binder.bind( bus, toArray( events ).join( ' ' ), e => {\r\n      callback.apply( callback, isArray( e.detail ) ? e.detail : [] );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Triggers callback functions.\r\n   * This accepts additional arguments and passes them to callbacks.\r\n   *\r\n   * @param event - An event name.\r\n   */\r\n  function emit( event: string ): void {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    binder.dispatch( bus, event, slice( arguments, 1 ) );\r\n  }\r\n\r\n  if ( Splide ) {\r\n    Splide.event.on( EVENT_DESTROY, binder.destroy );\r\n  }\r\n\r\n  return assign( binder, {\r\n    bus,\r\n    on,\r\n    off: apply( binder.unbind, bus ),\r\n    emit,\r\n  } );\r\n}","import { min, raf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface RequestIntervalInterface {\r\n  start( resume?: boolean ): void;\r\n  pause(): void;\r\n  rewind(): void;\r\n  cancel(): void;\r\n  set( interval: number ): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param interval   - The interval duration in milliseconds.\r\n * @param onInterval - The callback fired on every interval.\r\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\r\n * @param limit      - Optional. Limits the number of interval.\r\n */\r\nexport function RequestInterval(\r\n  interval: number,\r\n  onInterval: () => void,\r\n  onUpdate?: ( rate: number ) => void,\r\n  limit?: number\r\n): RequestIntervalInterface {\r\n  const { now } = Date;\r\n\r\n  /**\r\n   * The time when the interval starts.\r\n   */\r\n  let startTime: number;\r\n\r\n  /**\r\n   * The current progress rate.\r\n   */\r\n  let rate = 0;\r\n\r\n  /**\r\n   * The animation frame ID.\r\n   */\r\n  let id: number;\r\n\r\n  /**\r\n   * Indicates whether the interval is currently paused or not.\r\n   */\r\n  let paused = true;\r\n\r\n  /**\r\n   * The loop count. This only works when the `limit` argument is provided.\r\n   */\r\n  let count = 0;\r\n\r\n  /**\r\n   * The update function called on every animation frame.\r\n   */\r\n  function update(): void {\r\n    if ( ! paused ) {\r\n      rate = interval ? min( ( now() - startTime ) / interval, 1 ) : 1;\r\n      onUpdate && onUpdate( rate );\r\n\r\n      if ( rate >= 1 ) {\r\n        onInterval();\r\n        startTime = now();\r\n\r\n        if ( limit && ++count >= limit ) {\r\n          return pause();\r\n        }\r\n      }\r\n\r\n      raf( update );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts the interval.\r\n   *\r\n   * @param resume - Optional. Whether to resume the paused progress or not.\r\n   */\r\n  function start( resume?: boolean ): void {\r\n    ! resume && cancel();\r\n    startTime = now() - ( resume ? rate * interval : 0 );\r\n    paused    = false;\r\n    raf( update );\r\n  }\r\n\r\n  /**\r\n   * Pauses the interval.\r\n   */\r\n  function pause(): void {\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Rewinds the current progress.\r\n   */\r\n  function rewind(): void {\r\n    startTime = now();\r\n    rate      = 0;\r\n\r\n    if ( onUpdate ) {\r\n      onUpdate( rate );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the interval.\r\n   */\r\n  function cancel() {\r\n    id && cancelAnimationFrame( id );\r\n    rate   = 0;\r\n    id     = 0;\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Sets new interval duration.\r\n   *\r\n   * @param time - The interval duration in milliseconds.\r\n   */\r\n  function set( time: number ): void {\r\n    interval = time;\r\n  }\r\n\r\n  /**\r\n   * Checks if the interval is paused or not.\r\n   *\r\n   * @return `true` if the interval is paused, or otherwise `false`.\r\n   */\r\n  function isPaused(): boolean {\r\n    return paused;\r\n  }\r\n\r\n  return {\r\n    start,\r\n    rewind,\r\n    pause,\r\n    cancel,\r\n    set,\r\n    isPaused,\r\n  };\r\n}\r\n","import { includes, toArray } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the State object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface StateObject {\r\n  set( state: number ): void;\r\n  is( states: number | number[] ): boolean;\r\n}\r\n\r\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param initialState - Specifies the initial state.\r\n */\r\nexport function State( initialState: number ): StateObject {\r\n  /**\r\n   * The current state.\r\n   */\r\n  let state = initialState;\r\n\r\n  /**\r\n   * Sets a new state.\r\n   *\r\n   * @param value - A new state value.\r\n   */\r\n  function set( value: number ): void {\r\n    state = value;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state matches the provided one.\r\n   *\r\n   * @param states - A state to check.\r\n   *\r\n   * @return `true` if the current state is the provided one.\r\n   */\r\n  function is( states: number | number[] ): boolean {\r\n    return includes( toArray( states ), state );\r\n  }\r\n\r\n  return { set, is };\r\n}\r\n","const ARROW = 'Arrow';\r\nexport const ARROW_LEFT  = `${ ARROW }Left`;\r\nexport const ARROW_RIGHT = `${ ARROW }Right`;\r\nexport const ARROW_UP    = `${ ARROW }Up`;\r\nexport const ARROW_DOWN  = `${ ARROW }Down`;","/**\r\n * Enumerates slides from left to right.\r\n */\r\nexport const LTR = 'ltr';\r\n\r\n/**\r\n * Enumerates slides from right to left.\r\n */\r\nexport const RTL = 'rtl';\r\n\r\n/**\r\n * Enumerates slides in a col.\r\n */\r\nexport const TTB = 'ttb';\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../constants/arrows';\r\nimport { RTL, TTB } from '../../constants/directions';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\n\r\n\r\n/**\r\n * The interface for the Direction component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DirectionComponent extends BaseComponent {\r\n  resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string;\r\n  orient( value: number ): number;\r\n}\r\n\r\n/**\r\n * The translation map for directions.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ORIENTATION_MAP = {\r\n  width     : [ 'height' ],\r\n  left      : [ 'top', 'right' ],\r\n  right     : [ 'bottom', 'left' ],\r\n  x         : [ 'y' ],\r\n  X         : [ 'Y' ],\r\n  Y         : [ 'X' ],\r\n  ArrowLeft : [ ARROW_UP, ARROW_RIGHT ],\r\n  ArrowRight: [ ARROW_DOWN, ARROW_LEFT ],\r\n};\r\n\r\n/**\r\n * The component that absorbs the difference among directions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Direction component object.\r\n */\r\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\r\n  /**\r\n   * Resolves the provided property name.\r\n   *\r\n   * @param prop      - A property name to translate.\r\n   * @param axisOnly  - Optional. If `ture`, returns the same property for LTR and RTL.\r\n   * @param direction - Optional. Specify the direction. The default value is the `direction` option.\r\n   */\r\n  function resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string {\r\n    direction = direction || options.direction;\r\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\r\n\r\n    return ORIENTATION_MAP[ prop ] && ORIENTATION_MAP[ prop ][ index ]\r\n      || prop.replace( /width|left|right/i, ( match, offset ) => {\r\n        const replacement = ORIENTATION_MAP[ match.toLowerCase() ][ index ] || match;\r\n        return offset > 0 ? replacement.charAt( 0 ).toUpperCase() + replacement.slice( 1 ) : replacement;\r\n      } );\r\n  }\r\n\r\n  /**\r\n   * Orients the value towards the current direction.\r\n   *\r\n   * @param value - A value to orient.\r\n   *\r\n   * @return The oriented value.\r\n   */\r\n  function orient( value: number ): number {\r\n    return value * ( options.direction === RTL ? 1 : -1 );\r\n  }\r\n\r\n  return {\r\n    resolve,\r\n    orient,\r\n  };\r\n}\r\n","export const ROLE      = 'role';\r\nexport const TAB_INDEX = 'tabindex';\r\nexport const DISABLED  = 'disabled';\r\n\r\nexport const ARIA_PREFIX          = 'aria-';\r\nexport const ARIA_CONTROLS        = `${ ARIA_PREFIX }controls`;\r\nexport const ARIA_CURRENT         = `${ ARIA_PREFIX }current`;\r\nexport const ARIA_SELECTED        = `${ ARIA_PREFIX }selected`;\r\nexport const ARIA_LABEL           = `${ ARIA_PREFIX }label`;\r\nexport const ARIA_LABELLEDBY      = `${ ARIA_PREFIX }labelledby`;\r\nexport const ARIA_HIDDEN          = `${ ARIA_PREFIX }hidden`;\r\nexport const ARIA_ORIENTATION     = `${ ARIA_PREFIX }orientation`;\r\nexport const ARIA_ROLEDESCRIPTION = `${ ARIA_PREFIX }roledescription`;\r\nexport const ARIA_LIVE            = `${ ARIA_PREFIX }live`;\r\nexport const ARIA_RELEVANT        = `${ ARIA_PREFIX }relevant`;\r\n\r\n/**\r\n * The array with all attributes to remove later.\r\n * Need to manually remove attributes that are not in this.\r\n * Note that removing aria-live disables the live region until the page reload.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ALL_ATTRIBUTES = [\r\n  ROLE,\r\n  TAB_INDEX,\r\n  DISABLED,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_LABEL,\r\n  ARIA_LABELLEDBY,\r\n  ARIA_HIDDEN,\r\n  ARIA_ORIENTATION,\r\n  ARIA_ROLEDESCRIPTION,\r\n];\r\n","import { PROJECT_CODE } from './project';\r\n\r\n\r\nexport const CLASS_ROOT            = PROJECT_CODE;\r\nexport const CLASS_TRACK           = `${ PROJECT_CODE }__track`;\r\nexport const CLASS_LIST            = `${ PROJECT_CODE }__list`;\r\nexport const CLASS_SLIDE           = `${ PROJECT_CODE }__slide`;\r\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\r\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\r\nexport const CLASS_ARROWS          = `${ PROJECT_CODE }__arrows`;\r\nexport const CLASS_ARROW           = `${ PROJECT_CODE }__arrow`;\r\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\r\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\r\nexport const CLASS_PAGINATION      = `${ PROJECT_CODE }__pagination`;\r\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\r\nexport const CLASS_PROGRESS        = `${ PROJECT_CODE }__progress`;\r\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\r\nexport const CLASS_TOGGLE          = `${ PROJECT_CODE }__toggle`;\r\nexport const CLASS_TOGGLE_PLAY     = `${ CLASS_TOGGLE }__play`;\r\nexport const CLASS_TOGGLE_PAUSE    = `${ CLASS_TOGGLE }__pause`;\r\nexport const CLASS_SPINNER         = `${ PROJECT_CODE }__spinner`;\r\nexport const CLASS_SR              = `${ PROJECT_CODE }__sr`;\r\nexport const CLASS_INITIALIZED     = 'is-initialized';\r\nexport const CLASS_ACTIVE          = 'is-active';\r\nexport const CLASS_PREV            = 'is-prev';\r\nexport const CLASS_NEXT            = 'is-next';\r\nexport const CLASS_VISIBLE         = 'is-visible';\r\nexport const CLASS_LOADING         = 'is-loading';\r\nexport const CLASS_FOCUS_IN        = 'is-focus-in';\r\n\r\n\r\n/**\r\n * The array with all status classes.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATUS_CLASSES = [\r\n  CLASS_ACTIVE,\r\n  CLASS_VISIBLE,\r\n  CLASS_PREV,\r\n  CLASS_NEXT,\r\n  CLASS_LOADING,\r\n  CLASS_FOCUS_IN,\r\n];\r\n\r\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const CLASSES = {\r\n  slide     : CLASS_SLIDE,\r\n  clone     : CLASS_CLONE,\r\n  arrows    : CLASS_ARROWS,\r\n  arrow     : CLASS_ARROW,\r\n  prev      : CLASS_ARROW_PREV,\r\n  next      : CLASS_ARROW_NEXT,\r\n  pagination: CLASS_PAGINATION,\r\n  page      : CLASS_PAGINATION_PAGE,\r\n  spinner   : CLASS_SPINNER,\r\n};\r\n","/**\r\n * The power of the friction.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION = 5;\r\n\r\n/**\r\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOG_INTERVAL = 200;\r\n\r\n/**\r\n * Start events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_DOWN_EVENTS = 'touchstart mousedown';\r\n\r\n/**\r\n * Update events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_MOVE_EVENTS = 'touchmove mousemove';\r\n\r\n/**\r\n * End events for dragging.\r\n * The `click` event is required because the browser sometimes dispatches `drag` events instead of `mouse`.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_UP_EVENTS = 'touchend touchcancel mouseup click';\r\n","/**\r\n * The type for the regular slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SLIDE = 'slide';\r\n\r\n/**\r\n * The type for the carousel slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOOP = 'loop';\r\n\r\n/**\r\n * The type for the fade slider that can not have multiple slides in a page.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FADE = 'fade';\r\n","import {\r\n  ALL_ATTRIBUTES,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_HIDDEN,\r\n  ARIA_LABEL,\r\n  ARIA_ROLEDESCRIPTION,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_CONTAINER,\r\n  CLASS_NEXT,\r\n  CLASS_PREV,\r\n  CLASS_VISIBLE,\r\n  STATUS_CLASSES,\r\n} from '../../constants/classes';\r\nimport {\r\n  EVENT_ACTIVE,\r\n  EVENT_CLICK,\r\n  EVENT_HIDDEN,\r\n  EVENT_INACTIVE,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_SCROLLED,\r\n  EVENT_SHIFTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_VISIBLE,\r\n} from '../../constants/events';\r\nimport { MOVING, SCROLLING } from '../../constants/states';\r\nimport { FADE, LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent } from '../../types';\r\nimport {\r\n  abs,\r\n  apply,\r\n  ceil,\r\n  child,\r\n  floor,\r\n  focus,\r\n  format,\r\n  getAttribute,\r\n  hasClass,\r\n  min,\r\n  pad,\r\n  queryAll,\r\n  rect,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  style as _style,\r\n  toggleClass,\r\n} from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Slide sub component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface  SlideComponent extends BaseComponent {\r\n  index: number;\r\n  slideIndex: number;\r\n  slide: HTMLElement;\r\n  container: HTMLElement;\r\n  isClone: boolean;\r\n  update(): void;\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  isWithin( from: number, distance: number ): boolean;\r\n}\r\n\r\n/**\r\n * The sub component for managing each slide.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param index      - A slide index.\r\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not a clone.\r\n * @param slide      - A slide element.\r\n *\r\n * @return A Slide sub component.\r\n */\r\nexport function Slide( Splide: Splide, index: number, slideIndex: number, slide: HTMLElement ): SlideComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, emit, bind } = event;\r\n  const { Components, root, options } = Splide;\r\n  const { isNavigation, updateOnMove, i18n, pagination, slideFocus } = options;\r\n  const { resolve } = Components.Direction;\r\n  const styles         = getAttribute( slide, 'style' );\r\n  const label          = getAttribute( slide, ARIA_LABEL );\r\n  const isClone        = slideIndex > -1;\r\n  const container      = child( slide, `.${ CLASS_CONTAINER }` );\r\n  const focusableNodes = queryAll( slide, options.focusableNodes || '' );\r\n\r\n  /**\r\n   * Turns into `true` when the component is destroyed.\r\n   */\r\n  let destroyed: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount( this: SlideComponent ): void {\r\n    if ( ! isClone ) {\r\n      slide.id = `${ root.id }-slide${ pad( index + 1 ) }`;\r\n      setAttribute( slide, ROLE, pagination ? 'tabpanel' : 'group' );\r\n      setAttribute( slide, ARIA_ROLEDESCRIPTION, i18n.slide );\r\n      setAttribute( slide, ARIA_LABEL, label || format( i18n.slideLabel, [ index + 1, Splide.length ] ) );\r\n    }\r\n\r\n    listen();\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    bind( slide, 'click', apply( emit, EVENT_CLICK, self ) );\r\n    bind( slide, 'keydown', apply( emit, EVENT_SLIDE_KEYDOWN, self ) );\r\n    on( [ EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED ], update );\r\n    on( EVENT_NAVIGATION_MOUNTED, initNavigation );\r\n\r\n    if ( updateOnMove ) {\r\n      on( EVENT_MOVE, onMove );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    destroyed = true;\r\n    event.destroy();\r\n    removeClass( slide, STATUS_CLASSES );\r\n    removeAttribute( slide, ALL_ATTRIBUTES );\r\n    setAttribute( slide, 'style', styles );\r\n    setAttribute( slide, ARIA_LABEL, label || '' );\r\n  }\r\n\r\n  /**\r\n   * Initializes slides as navigation.\r\n   */\r\n  function initNavigation(): void {\r\n    const controls = Splide.splides.map( target => {\r\n      const Slide = target.splide.Components.Slides.getAt( index );\r\n      return Slide ? Slide.slide.id : '';\r\n    } ).join( ' ' );\r\n\r\n    setAttribute( slide, ARIA_LABEL, format( i18n.slideX, ( isClone ? slideIndex : index ) + 1 ) );\r\n    setAttribute( slide, ARIA_CONTROLS, controls );\r\n    setAttribute( slide, ROLE, slideFocus ? 'button' : '' );\r\n    slideFocus && removeAttribute( slide, ARIA_ROLEDESCRIPTION );\r\n  }\r\n\r\n  /**\r\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\r\n   */\r\n  function onMove(): void {\r\n    if ( ! destroyed ) {\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates attribute and classes of the slide.\r\n   */\r\n  function update(): void {\r\n    if ( ! destroyed ) {\r\n      const { index: curr } = Splide;\r\n\r\n      updateActivity();\r\n      updateVisibility();\r\n      toggleClass( slide, CLASS_PREV, index === curr - 1 );\r\n      toggleClass( slide, CLASS_NEXT, index === curr + 1 );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the status related with activity.\r\n   */\r\n  function updateActivity(): void {\r\n    const active = isActive();\r\n\r\n    if ( active !== hasClass( slide, CLASS_ACTIVE ) ) {\r\n      toggleClass( slide, CLASS_ACTIVE, active );\r\n      setAttribute( slide, ARIA_CURRENT, isNavigation && active || '' );\r\n      emit( active ? EVENT_ACTIVE : EVENT_INACTIVE, self );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates classes and attributes related with visibility.\r\n   * - Do not update aria-hidden on shifting to avoid Window Narrator from start reading contents.\r\n   * - If the slide has focus and gets hidden, moves focus to the active slide.\r\n   */\r\n  function updateVisibility(): void {\r\n    const visible = isVisible();\r\n    const hidden = ! visible && ( ! isActive() || isClone );\r\n\r\n    if ( ! Splide.state.is( [ MOVING, SCROLLING ] ) ) {\r\n      setAttribute( slide, ARIA_HIDDEN, hidden || '' );\r\n    }\r\n\r\n    setAttribute( focusableNodes, TAB_INDEX, hidden ? -1 : '' );\r\n\r\n    if ( slideFocus ) {\r\n      setAttribute( slide, TAB_INDEX, hidden ? -1 : 0 );\r\n    }\r\n\r\n    if ( visible !== hasClass( slide, CLASS_VISIBLE ) ) {\r\n      toggleClass( slide, CLASS_VISIBLE, visible );\r\n      emit( visible ? EVENT_VISIBLE : EVENT_HIDDEN, self );\r\n    }\r\n\r\n    if ( ! visible && document.activeElement === slide ) {\r\n      const Slide = Components.Slides.getAt( Splide.index );\r\n      Slide && focus( Slide.slide );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to the slider or the container.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    _style( ( useContainer && container ) || slide, prop, value );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is active or not.\r\n   *\r\n   * @return `true` if the slide is active.\r\n   */\r\n  function isActive(): boolean {\r\n    const { index: curr } = Splide;\r\n    return curr === index || ( options.cloneStatus && curr === slideIndex );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is visible or not.\r\n   */\r\n  function isVisible(): boolean {\r\n    if ( Splide.is( FADE ) ) {\r\n      return isActive();\r\n    }\r\n\r\n    const trackRect = rect( Components.Elements.track );\r\n    const slideRect = rect( slide );\r\n    const left      = resolve( 'left' );\r\n    const right     = resolve( 'right' );\r\n\r\n    return floor( trackRect[ left ] ) <= ceil( slideRect[ left ] )\r\n      && floor( slideRect[ right ] ) <= ceil( trackRect[ right ] );\r\n  }\r\n\r\n  /**\r\n   * Calculates how far this slide is from another slide and\r\n   * returns `true` if the distance is within the given number.\r\n   *\r\n   * @param from     - An index of a base slide.\r\n   * @param distance - `true` if the slide is within this number.\r\n   *\r\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\r\n   */\r\n  function isWithin( from: number, distance: number ): boolean {\r\n    let diff = abs( from - index );\r\n\r\n    if ( ! isClone && ( options.rewind || Splide.is( LOOP ) ) ) {\r\n      diff = min( diff, Splide.length - diff );\r\n    }\r\n\r\n    return diff <= distance;\r\n  }\r\n\r\n  const self = {\r\n    index,\r\n    slideIndex,\r\n    slide,\r\n    container,\r\n    isClone,\r\n    mount,\r\n    destroy,\r\n    update,\r\n    style,\r\n    isWithin,\r\n  };\r\n\r\n  return self;\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the autoplay interval duration.\r\n *\r\n * @since 3.5.0\r\n */\r\nexport const INTERVAL_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-interval`;\r\n","/**\r\n * AddEventListenerOptions for listeners that may prevent the browser scroll.\r\n *\r\n * @since 3.4.1\r\n */\r\nexport const SCROLL_LISTENER_OPTIONS = { passive: false, capture: true };\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../../constants/arrows';\r\nimport { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * The map to associate a non-standard name to the standard one.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport const NORMALIZATION_MAP = {\r\n  Spacebar: ' ',\r\n  Right   : ARROW_RIGHT,\r\n  Left    : ARROW_LEFT,\r\n  Up      : ARROW_UP,\r\n  Down    : ARROW_DOWN,\r\n};\r\n\r\n/**\r\n * Normalizes the key.\r\n *\r\n * @param key - A string or a KeyboardEvent object.\r\n *\r\n * @return A normalized key.\r\n */\r\nexport function normalizeKey( key: string | KeyboardEvent ): string {\r\n  key = isString( key ) ? key : key.key;\r\n  return NORMALIZATION_MAP[ key ] || key;\r\n}","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\r\nimport { EVENT_MOVE, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { nextTick } from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\n\r\n\r\n/**\r\n * The interface for the Keyboard component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface KeyboardComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * The keyboard event name.\r\n *\r\n * @since 3.6.0\r\n */\r\nconst KEYBOARD_EVENT = 'keydown';\r\n\r\n/**\r\n * The component for controlling the slider by keyboards.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Keyboard component object.\r\n */\r\nexport function Keyboard( Splide: Splide, Components: Components, options: Options ): KeyboardComponent {\r\n  const { on, bind, unbind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * The target element of the keyboard event.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Indicates whether the component is currently disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, destroy );\r\n    on( EVENT_UPDATED, init );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { keyboard } = options;\r\n\r\n    if ( keyboard ) {\r\n      target = keyboard === 'global' ? window : root;\r\n      bind( target, KEYBOARD_EVENT, onKeydown );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    unbind( target, KEYBOARD_EVENT );\r\n  }\r\n\r\n  /**\r\n   * Disables the keyboard input.\r\n   *\r\n   * @param value - Toggles disabling/enabling the keyboard input.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  /**\r\n   * Called when the slider moves.\r\n   * To avoid the slider from moving twice, wait for a tick.\r\n   */\r\n  function onMove(): void {\r\n    const _disabled = disabled;\r\n    disabled = true;\r\n    nextTick( () => { disabled = _disabled } );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the target.\r\n   *\r\n   * @param e - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( e: KeyboardEvent ): void {\r\n    if ( ! disabled ) {\r\n      const key = normalizeKey( e );\r\n\r\n      if ( key === resolve( ARROW_LEFT ) ) {\r\n        Splide.go( '<' );\r\n      } else if ( key === resolve( ARROW_RIGHT ) ) {\r\n        Splide.go( '>' );\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    disable,\r\n  };\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the src value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRC_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-lazy`;\r\n\r\n/**\r\n * The data attribute for the srcset value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRCSET_DATA_ATTRIBUTE = `${ SRC_DATA_ATTRIBUTE }-srcset`;\r\n\r\n/**\r\n * The selector string for images to load.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const IMAGE_SELECTOR = `[${ SRC_DATA_ATTRIBUTE }], [${ SRCSET_DATA_ATTRIBUTE }]`;\r\n","import { ARIA_ORIENTATION } from '../../constants/attributes';\r\nimport { TTB } from '../../constants/directions';\r\nimport {\r\n  EVENT_CLICK,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface, EventInterfaceObject } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { empty, includes, isUndefined, prevent, setAttribute } from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\nimport { SlideComponent } from '../Slides/Slide';\r\n\r\n\r\n/**\r\n * The interface for the Sync component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface SyncComponent extends BaseComponent {\r\n  remount(): void;\r\n}\r\n\r\n/**\r\n * The keys for triggering the navigation slide.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst TRIGGER_KEYS = [ ' ', 'Enter' ];\r\n\r\n/**\r\n * The component for syncing multiple sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Sync component object.\r\n */\r\nexport function Sync( Splide: Splide, Components: Components, options: Options ): SyncComponent {\r\n  const { isNavigation, slideFocus } = options;\r\n\r\n  /**\r\n   * Stores event objects.\r\n   */\r\n  const events: EventInterfaceObject[] = [];\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    Splide.options = { slideFocus: isUndefined( slideFocus ) ? isNavigation : slideFocus };\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Splide.splides.forEach( target => {\r\n      if ( ! target.isParent ) {\r\n        sync( Splide, target.splide );\r\n        sync( target.splide, Splide );\r\n      }\r\n    } );\r\n\r\n    if ( isNavigation ) {\r\n      navigate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    events.forEach( event => { event.destroy() } );\r\n    empty( events );\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   *\r\n   * @internal\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Syncs the current index with a provided child splide instance.\r\n   *\r\n   * @param splide - A splide instance to sync with.\r\n   * @param target - A target splide instance.\r\n   */\r\n  function sync( splide: Splide, target: Splide ): void {\r\n    const event = EventInterface( splide );\r\n\r\n    event.on( EVENT_MOVE, ( index, prev, dest ) => {\r\n      target.go( target.is( LOOP ) ? dest : index );\r\n    } );\r\n\r\n    events.push( event );\r\n  }\r\n\r\n  /**\r\n   * Makes slides clickable and moves the slider to the index of clicked slide.\r\n   * Note that the direction of `menu` is implicitly `vertical` as default.\r\n   */\r\n  function navigate(): void {\r\n    const event = EventInterface( Splide );\r\n    const { on } = event;\r\n\r\n    on( EVENT_CLICK, onClick );\r\n    on( EVENT_SLIDE_KEYDOWN, onKeydown );\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], update );\r\n\r\n    events.push( event );\r\n    event.emit( EVENT_NAVIGATION_MOUNTED, Splide.splides );\r\n  }\r\n\r\n  /**\r\n   * Update attributes.\r\n   */\r\n  function update(): void {\r\n    setAttribute( Components.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? 'vertical' : '' );\r\n  }\r\n\r\n  /**\r\n   * Called when the navigation slide is clicked.\r\n   *\r\n   * @param Slide - A clicked Slide component.\r\n   */\r\n  function onClick( Slide: SlideComponent ): void {\r\n    Splide.go( Slide.index );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the navigation slide.\r\n   *\r\n   * @param Slide - A Slide component.\r\n   * @param e     - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( Slide: SlideComponent, e: KeyboardEvent ): void {\r\n    if ( includes( TRIGGER_KEYS, normalizeKey( e ) ) ) {\r\n      onClick( Slide );\r\n      prevent( e );\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n    remount,\r\n  };\r\n}\r\n","import { MEDIA_PREFERS_REDUCED_MOTION } from '../../constants/media';\r\nimport { CREATED, DESTROYED } from '../../constants/states';\r\nimport { EventBinder } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { merge, omit, ownKeys } from '../../utils';\r\nimport { EVENT_UPDATED } from '../../constants/events';\r\n\r\n\r\n/**\r\n * The interface for the Media component.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport interface MediaComponent extends BaseComponent {\r\n  /** @internal */\r\n  reduce( reduced: boolean ): void;\r\n  set( options: Options, userOptions?: boolean ): void;\r\n}\r\n\r\n/**\r\n * The component for observing media queries and updating options if necessary.\r\n * This used to be the Options component.\r\n *\r\n * @since 4.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Media component object.\r\n */\r\nexport function Media( Splide: Splide, Components: Components, options: Options ): MediaComponent {\r\n  const { state } = Splide;\r\n  const breakpoints   = options.breakpoints || {};\r\n  const reducedMotion = options.reducedMotion || {};\r\n  const binder        = EventBinder();\r\n\r\n  /**\r\n   * Stores options and MediaQueryList object.\r\n   */\r\n  const queries: Array<[ Options, MediaQueryList ]> = [];\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    const isMin = options.mediaQuery === 'min';\r\n\r\n    ownKeys( breakpoints )\r\n      .sort( ( n, m ) => isMin ? +n - +m : +m - +n )\r\n      .forEach( key => {\r\n        register( breakpoints[ key ], `(${ isMin ? 'min' : 'max' }-width:${ key }px)` );\r\n      } );\r\n\r\n    register( reducedMotion, MEDIA_PREFERS_REDUCED_MOTION );\r\n    update();\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Will be `true` for complete destruction.\r\n   */\r\n  function destroy( completely: boolean ): void {\r\n    if ( completely ) {\r\n      binder.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers entries as [ Options, media query string ].\r\n   *\r\n   * @param options - Options merged to current options when the document matches the query.\r\n   * @param query   - A query string.\r\n   */\r\n  function register( options: Options, query: string ): void {\r\n    const queryList = matchMedia( query );\r\n    binder.bind( queryList, 'change', update );\r\n    queries.push( [ options, queryList ] );\r\n  }\r\n\r\n  /**\r\n   * Checks all media queries in entries and updates options.\r\n   */\r\n  function update(): void {\r\n    const destroyed = state.is( DESTROYED );\r\n    const direction = options.direction;\r\n    const merged = queries.reduce<Options>( ( merged, entry ) => {\r\n      return merge( merged, entry[ 1 ].matches ? entry[ 0 ] : {} );\r\n    }, {} );\r\n\r\n    omit( options );\r\n    set( merged );\r\n\r\n    if ( options.destroy ) {\r\n      Splide.destroy( options.destroy === 'completely' );\r\n    } else if ( destroyed ) {\r\n      destroy( true );\r\n      Splide.mount();\r\n    } else {\r\n      direction !== options.direction && Splide.refresh();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disables or enables `reducedMotion` options.\r\n   * This method does nothing when the document does not match the query.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param enable - Determines whether to apply `reducedMotion` options or not.\r\n   */\r\n  function reduce( enable: boolean ): void {\r\n    if ( matchMedia( MEDIA_PREFERS_REDUCED_MOTION ).matches ) {\r\n      enable ? merge( options, reducedMotion ) : omit( options, ownKeys( reducedMotion ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets options.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param opts - New options.\r\n   * @param user - Optional. Determines whether to also update user options or not.\r\n   */\r\n  function set( opts: Options, user?: boolean ): void {\r\n    merge( options, opts );\r\n    user && merge( Object.getPrototypeOf( options ), opts );\r\n\r\n    if ( ! state.is( CREATED ) ) {\r\n      Splide.emit( EVENT_UPDATED, options );\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup,\r\n    destroy,\r\n    reduce,\r\n    set,\r\n  };\r\n}\r\n","import { ALL_ATTRIBUTES, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_ROLEDESCRIPTION, ROLE } from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_ARROW_NEXT,\r\n  CLASS_ARROW_PREV,\r\n  CLASS_ARROWS,\r\n  CLASS_CLONE,\r\n  CLASS_FOCUS_IN,\r\n  CLASS_LIST,\r\n  CLASS_PAGINATION,\r\n  CLASS_PROGRESS_BAR,\r\n  CLASS_ROOT,\r\n  CLASS_SLIDE,\r\n  CLASS_TOGGLE,\r\n  CLASS_TRACK,\r\n} from '../../constants/classes';\r\nimport { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { PROJECT_CODE } from '../../constants/project';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  assert,\r\n  assign,\r\n  child,\r\n  children,\r\n  empty,\r\n  forOwn,\r\n  getAttribute,\r\n  push,\r\n  query,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  toggleClass,\r\n  uniqueId,\r\n} from '../../utils';\r\nimport { closest } from '../../utils/dom/closest/closest';\r\nimport { POINTER_DOWN_EVENTS } from '../Drag/constants';\r\n\r\n\r\n/**\r\n * The interface for elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementCollection {\r\n  root: HTMLElement;\r\n  track: HTMLElement;\r\n  list: HTMLElement;\r\n  slides: HTMLElement[];\r\n  arrows?: HTMLElement;\r\n  pagination?: HTMLUListElement;\r\n  prev?: HTMLButtonElement;\r\n  next?: HTMLButtonElement;\r\n  bar?: HTMLElement;\r\n  toggle?: HTMLElement;\r\n}\r\n\r\n/**\r\n * The interface for the Elements component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementsComponent extends BaseComponent, ElementCollection {\r\n}\r\n\r\n/**\r\n * The component that collects and handles elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Elements component object.\r\n */\r\nexport function Elements( Splide: Splide, Components: Components, options: Options ): ElementsComponent {\r\n  const { on, bind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { i18n } = options;\r\n  const elements: ElementCollection = {} as ElementCollection;\r\n\r\n  /**\r\n   * Stores all slide elements.\r\n   */\r\n  const slides: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Stores all root classes.\r\n   */\r\n  let rootClasses: string[] = [];\r\n\r\n  /**\r\n   * Stores all list classes.\r\n   */\r\n  let trackClasses: string[] = [];\r\n\r\n  /**\r\n   * The track element.\r\n   */\r\n  let track: HTMLElement;\r\n\r\n  /**\r\n   * The list element.\r\n   */\r\n  let list: HTMLElement;\r\n\r\n  /**\r\n   * Turns into `true` when detecting keydown, and `false` when detecting pointerdown.\r\n   */\r\n  let isUsingKey: boolean;\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    collect();\r\n    init();\r\n    update();\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, setup );\r\n    on( EVENT_UPDATED, update );\r\n\r\n    bind( document, `${ POINTER_DOWN_EVENTS } keydown`, e => {\r\n      isUsingKey = e.type === 'keydown';\r\n    }, { capture: true } );\r\n\r\n    bind( root, 'focusin', () => {\r\n      toggleClass( root, CLASS_FOCUS_IN, !! isUsingKey );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Whether to destroy the component completely or not.\r\n   */\r\n  function destroy( completely?: boolean ): void {\r\n    const attrs = ALL_ATTRIBUTES.concat( 'style' );\r\n\r\n    empty( slides );\r\n    removeClass( root, rootClasses );\r\n    removeClass( track, trackClasses );\r\n    removeAttribute( [ track, list ], attrs );\r\n    removeAttribute( root, completely ? attrs : [ 'style', ARIA_ROLEDESCRIPTION ] );\r\n  }\r\n\r\n  /**\r\n   * Updates the status of elements.\r\n   */\r\n  function update(): void {\r\n    removeClass( root, rootClasses );\r\n    removeClass( track, trackClasses );\r\n\r\n    rootClasses  = getClasses( CLASS_ROOT );\r\n    trackClasses = getClasses( CLASS_TRACK );\r\n\r\n    addClass( root, rootClasses );\r\n    addClass( track, trackClasses );\r\n\r\n    setAttribute( root, ARIA_LABEL, options.label );\r\n    setAttribute( root, ARIA_LABELLEDBY, options.labelledby );\r\n  }\r\n\r\n  /**\r\n   * Collects elements which the slider consists of.\r\n   */\r\n  function collect(): void {\r\n    track = find( `.${ CLASS_TRACK }` );\r\n    list  = child( track, `.${ CLASS_LIST }` );\r\n\r\n    assert( track && list, 'A track/list element is missing.' );\r\n    push( slides, children( list, `.${ CLASS_SLIDE }:not(.${ CLASS_CLONE })` ) );\r\n\r\n    forOwn( {\r\n      arrows    : CLASS_ARROWS,\r\n      pagination: CLASS_PAGINATION,\r\n      prev      : CLASS_ARROW_PREV,\r\n      next      : CLASS_ARROW_NEXT,\r\n      bar       : CLASS_PROGRESS_BAR,\r\n      toggle    : CLASS_TOGGLE,\r\n    }, ( className, key ) => {\r\n      elements[ key ] = find( `.${ className }` );\r\n    } );\r\n\r\n    assign( elements, { root, track, list, slides } );\r\n  }\r\n\r\n  /**\r\n   * Initializes essential elements.\r\n   * Note that do not change the role of the root element,\r\n   * which removes the region from the accessibility tree.\r\n   */\r\n  function init(): void {\r\n    const id   = root.id || uniqueId( PROJECT_CODE );\r\n    const role = options.role;\r\n\r\n    root.id  = id;\r\n    track.id = track.id || `${ id }-track`;\r\n    list.id  = list.id || `${ id }-list`;\r\n\r\n    if ( ! getAttribute( root, ROLE ) && root.tagName !== 'SECTION' && role ) {\r\n      setAttribute( root, ROLE, role );\r\n    }\r\n\r\n    setAttribute( root, ARIA_ROLEDESCRIPTION, i18n.carousel );\r\n    setAttribute( list, ROLE, 'presentation' );\r\n  }\r\n\r\n  /**\r\n   * Finds an element only in this slider, ignoring elements in a nested slider.\r\n   *\r\n   * @return A found element or null.\r\n   */\r\n  function find( selector: string ): HTMLElement | undefined {\r\n    const elm = query<HTMLElement>( root, selector );\r\n    return elm && closest( elm, `.${ CLASS_ROOT }` ) === root ? elm : undefined;\r\n  }\r\n\r\n  /**\r\n   * Return an array with modifier classes.\r\n   *\r\n   * @param base - A base class name.\r\n   *\r\n   * @return An array with classes.\r\n   */\r\n  function getClasses( base: string ): string[] {\r\n    return [\r\n      `${ base }--${ options.type }`,\r\n      `${ base }--${ options.direction }`,\r\n      options.drag && `${ base }--draggable`,\r\n      options.isNavigation && `${ base }--nav`,\r\n      base === CLASS_ROOT && CLASS_ACTIVE,\r\n    ];\r\n  }\r\n\r\n  return assign( elements, {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n  } );\r\n}\r\n","import { isFunction } from '../../type/type';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Starts from the provided element, searches for the first element that matches the selector in ascendants.\r\n *\r\n * @param from     - An element to search from.\r\n * @param selector - A selector.\r\n *\r\n * @return The found element if available, or `null`.\r\n */\r\nexport function closest( from: HTMLElement, selector: string ): HTMLElement | null {\r\n  if ( isFunction( from.closest ) ) {\r\n    return from.closest( selector );\r\n  }\r\n\r\n  let elm: HTMLElement | null = from;\r\n\r\n  while ( elm && elm.nodeType === 1 ) {\r\n    if ( matches( elm, selector ) ) {\r\n      break;\r\n    }\r\n\r\n    elm = elm.parentElement;\r\n  }\r\n\r\n  return elm;\r\n}","import { EVENT_MOUNTED, EVENT_REFRESH, EVENT_RESIZE } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  append, apply,\r\n  before,\r\n  between,\r\n  empty,\r\n  forEach as forEachItem,\r\n  includes,\r\n  isFunction,\r\n  isHTMLElement,\r\n  isString,\r\n  matches,\r\n  parseHtml,\r\n  queryAll,\r\n  remove as removeNode,\r\n  toArray,\r\n} from '../../utils';\r\nimport { Slide, SlideComponent } from './Slide';\r\n\r\n\r\n/**\r\n * The interface for the Slides component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface SlidesComponent extends BaseComponent {\r\n  update(): void;\r\n  register( slide: HTMLElement, index: number, slideIndex: number ): void;\r\n  get( excludeClones?: boolean ): SlideComponent[];\r\n  getIn( page: number ): SlideComponent[];\r\n  getAt( index: number ): SlideComponent | undefined;\r\n  add( slide: string | Element | Array<string | Element>, index?: number ): void;\r\n  remove( selector: SlideMatcher ): void;\r\n  forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void;\r\n  filter( matcher: SlideMatcher ): SlideComponent[];\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  getLength( excludeClones?: boolean ): number;\r\n  isEnough(): boolean;\r\n}\r\n\r\n/**\r\n * The iteratee function for Slides.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlidesIteratee = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => void\r\n\r\n/**\r\n * The predicate function for Slides.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlidesPredicate = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => any\r\n\r\n/**\r\n * The type for filtering SlideComponent objects.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlideMatcher = number | number[] | string | SlidesPredicate;\r\n\r\n/**\r\n * The component for managing all slides include clones.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Slides component object.\r\n */\r\nexport function Slides( Splide: Splide, Components: Components, options: Options ): SlidesComponent {\r\n  const { on, emit, bind } = EventInterface( Splide );\r\n  const { slides, list } = Components.Elements;\r\n\r\n  /**\r\n   * Stores all SlideComponent objects.\r\n   */\r\n  const Slides: SlideComponent[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, init );\r\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\r\n      Slides.sort( ( Slide1, Slide2 ) => Slide1.index - Slide2.index );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    slides.forEach( ( slide, index ) => { register( slide, index, -1 ) } );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    forEach( Slide => { Slide.destroy() } );\r\n    empty( Slides );\r\n  }\r\n\r\n  /**\r\n   * Manually updates the status of all slides.\r\n   */\r\n  function update(): void {\r\n    forEach( Slide => { Slide.update() } );\r\n  }\r\n\r\n  /**\r\n   * Registers a slide element and creates a Slide object.\r\n   *\r\n   * @param slide      - A slide element to register.\r\n   * @param index      - A slide index.\r\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\r\n   */\r\n  function register( slide: HTMLElement, index: number, slideIndex: number ): void {\r\n    const object = Slide( Splide, index, slideIndex, slide );\r\n    object.mount();\r\n    Slides.push( object );\r\n  }\r\n\r\n  /**\r\n   * Returns all Slide objects.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return An array with Slide objects.\r\n   */\r\n  function get( excludeClones?: boolean ): SlideComponent[] {\r\n    return excludeClones ? filter( Slide => ! Slide.isClone ) : Slides;\r\n  }\r\n\r\n  /**\r\n   * Returns slides in the specified page.\r\n   *\r\n   * @param page - A page index.\r\n   *\r\n   * @return An array with slides that belong to the page.\r\n   */\r\n  function getIn( page: number ): SlideComponent[] {\r\n    const { Controller } = Components;\r\n    const index = Controller.toIndex( page );\r\n    const max   = Controller.hasFocus() ? 1 : options.perPage;\r\n    return filter( Slide => between( Slide.index, index, index + max - 1 ) );\r\n  }\r\n\r\n  /**\r\n   * Returns a Slide object at the specified index.\r\n   *\r\n   * @param index - A slide index.\r\n   *\r\n   * @return A Slide object if available, or otherwise `undefined`.\r\n   */\r\n  function getAt( index: number ): SlideComponent | undefined {\r\n    return filter( index )[ 0 ];\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide or slides at a specified index.\r\n   *\r\n   * @param items - A slide element, an HTML string or an array with them.\r\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\r\n   */\r\n  function add( items: string | Element | Array<string | Element>, index?: number ): void {\r\n    forEachItem( items, slide => {\r\n      if ( isString( slide ) ) {\r\n        slide = parseHtml( slide );\r\n      }\r\n\r\n      if ( isHTMLElement( slide ) ) {\r\n        const ref = slides[ index ];\r\n        ref ? before( slide, ref ) : append( list, slide );\r\n        addClass( slide, options.classes.slide );\r\n        observeImages( slide, apply( emit, EVENT_RESIZE ) );\r\n      }\r\n    } );\r\n\r\n    emit( EVENT_REFRESH );\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  function remove( matcher: SlideMatcher ): void {\r\n    removeNode( filter( matcher ).map( Slide => Slide.slide ) );\r\n    emit( EVENT_REFRESH );\r\n  }\r\n\r\n  /**\r\n   * Iterates over Slide objects by the iteratee function.\r\n   *\r\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   */\r\n  function forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void {\r\n    get( excludeClones ).forEach( iteratee );\r\n  }\r\n\r\n  /**\r\n   * Filters Slides by the matcher\r\n   * that can be an index, an array with indices, a selector, or a predicate function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or a predicate function.\r\n   *\r\n   * @return An array with SlideComponent objects.\r\n   */\r\n  function filter( matcher: SlideMatcher ): SlideComponent[] {\r\n    return Slides.filter( isFunction( matcher )\r\n      ? matcher\r\n      : Slide => isString( matcher )\r\n        ? matches( Slide.slide, matcher )\r\n        : includes( toArray( matcher ), Slide.index )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to all slides or containers.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    forEach( Slide => { Slide.style( prop, value, useContainer ) } );\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback after all images in the element are loaded.\r\n   *\r\n   * @param elm      - An element that may contain images.\r\n   * @param callback - A callback function.\r\n   */\r\n  function observeImages( elm: Element, callback: AnyFunction ): void {\r\n    const images = queryAll( elm, 'img' );\r\n    let { length } = images;\r\n\r\n    if ( length ) {\r\n      images.forEach( img => {\r\n        bind( img, 'load error', () => {\r\n          if ( ! --length ) {\r\n            callback();\r\n          }\r\n        } );\r\n      } );\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the length of slides.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return The length of slides.\r\n   */\r\n  function getLength( excludeClones?: boolean ): number {\r\n    return excludeClones ? slides.length : Slides.length;\r\n  }\r\n\r\n  /**\r\n   * Checks if the number of slides is over than the `perPage` option, including clones.\r\n   *\r\n   * @return `true` if there are enough slides, or otherwise `false`.\r\n   */\r\n  function isEnough(): boolean {\r\n    return Slides.length > options.perPage;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    update,\r\n    register,\r\n    get,\r\n    getIn,\r\n    getAt,\r\n    add,\r\n    remove,\r\n    forEach,\r\n    filter,\r\n    style,\r\n    getLength,\r\n    isEnough,\r\n  };\r\n}\r\n","import { TTB } from '../../constants/directions';\r\nimport { EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface, Throttle } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, apply, assert, isObject, rect, style, unit } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Layout component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LayoutComponent extends BaseComponent {\r\n  listSize(): number;\r\n  slideSize( index: number, withoutGap?: boolean ): number;\r\n  sliderSize(): number;\r\n  totalSize( index?: number, withoutGap?: boolean ): number;\r\n  getPadding( right: boolean ): number;\r\n}\r\n\r\n/**\r\n * The component that layouts slider components and provides methods for dimensions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Layout component object.\r\n */\r\nexport function Layout( Splide: Splide, Components: Components, options: Options ): LayoutComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const { Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n  const { root, track, list } = Components.Elements;\r\n  const { getAt, style: styleSlides } = Slides;\r\n\r\n  /**\r\n   * Indicates whether the slider direction is vertical or not.\r\n   */\r\n  let vertical: boolean;\r\n\r\n  /**\r\n   * Keeps the DOMRect object of the root element.\r\n   */\r\n  let rootRect: DOMRect;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    bind( window, 'resize load', Throttle( apply( emit, EVENT_RESIZE ) ) );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\r\n    on( EVENT_RESIZE, resize );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component on `mount` or `updated`.\r\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\r\n   */\r\n  function init(): void {\r\n    rootRect = null;\r\n    vertical = options.direction === TTB;\r\n\r\n    style( root, 'maxWidth', unit( options.width ) );\r\n    style( track, resolve( 'paddingLeft' ), cssPadding( false ) );\r\n    style( track, resolve( 'paddingRight' ), cssPadding( true ) );\r\n\r\n    resize();\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions of some elements when the slider is resized.\r\n   */\r\n  function resize(): void {\r\n    const newRect = rect( root );\r\n\r\n    if ( ! rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height ) {\r\n      style( track, 'height', cssTrackHeight() );\r\n\r\n      styleSlides( resolve( 'marginRight' ), unit( options.gap ) );\r\n      styleSlides( 'width', cssSlideWidth() );\r\n      styleSlides( 'height', cssSlideHeight(), true );\r\n\r\n      rootRect = newRect;\r\n      emit( EVENT_RESIZED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the padding option and returns the value for each side.\r\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value as a CSS string.\r\n   */\r\n  function cssPadding( right: boolean ): string {\r\n    const { padding } = options;\r\n    const prop = resolve( right ? 'right' : 'left' );\r\n    return padding && unit( padding[ prop ] || ( isObject( padding ) ? 0 : padding ) ) || '0px';\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the track element as a CSS string.\r\n   *\r\n   * @return The height of the track.\r\n   */\r\n  function cssTrackHeight(): string {\r\n    let height = '';\r\n\r\n    if ( vertical ) {\r\n      height = cssHeight();\r\n      assert( height, 'height or heightRatio is missing.' );\r\n      height = `calc(${ height } - ${ cssPadding( false ) } - ${ cssPadding( true ) })`;\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * Converts options related with height to a CSS string.\r\n   *\r\n   * @return The height as a CSS string if available, or otherwise an empty string.\r\n   */\r\n  function cssHeight(): string {\r\n    return unit( options.height || rect( list ).width * options.heightRatio );\r\n  }\r\n\r\n  /**\r\n   * Returns the width of the slide as a CSS string.\r\n   *\r\n   * @return The width of the slide.\r\n   */\r\n  function cssSlideWidth(): string | null {\r\n    return options.autoWidth ? null : unit( options.fixedWidth ) || ( vertical ? '' : cssSlideSize() );\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the slide as a CSS string.\r\n   *\r\n   * @return The height of the slide.\r\n   */\r\n  function cssSlideHeight(): string | null {\r\n    return unit( options.fixedHeight )\r\n      || ( vertical ? ( options.autoHeight ? null : cssSlideSize() ) : cssHeight() );\r\n  }\r\n\r\n  /**\r\n   * Returns the CSS string for slide width or height without gap.\r\n   *\r\n   * @return The CSS string for slide width or height.\r\n   */\r\n  function cssSlideSize(): string {\r\n    const gap = unit( options.gap );\r\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\r\n  }\r\n\r\n  /**\r\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @return The size of the track element in pixel.\r\n   */\r\n  function listSize(): number {\r\n    return rect( list )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @param index      - Optional. A slide index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\r\n   *\r\n   * @return The size of the specified slide element in pixel.\r\n   */\r\n  function slideSize( index?: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index || 0 );\r\n    return Slide\r\n      ? rect( Slide.slide )[ resolve( 'width' ) ] + ( withoutGap ? 0 : getGap() )\r\n      : 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the total width or height of slides from the head of the slider to the specified index.\r\n   * This includes sizes of clones before the first slide.\r\n   *\r\n   * @param index      - A slide index. If omitted, uses the last index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\r\n   *\r\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\r\n   */\r\n  function totalSize( index: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index );\r\n\r\n    if ( Slide ) {\r\n      const right = rect( Slide.slide )[ resolve( 'right' ) ];\r\n      const left  = rect( list )[ resolve( 'left' ) ];\r\n      return abs( right - left ) + ( withoutGap ? 0 : getGap() );\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the slider size without clones before the first slide.\r\n   *\r\n   * @return The width or height of the slider without clones.\r\n   */\r\n  function sliderSize(): number {\r\n    return totalSize( Splide.length - 1, true ) - totalSize( -1, true );\r\n  }\r\n\r\n  /**\r\n   * Returns the gap value.\r\n   *\r\n   * @return The gap value in pixel.\r\n   */\r\n  function getGap(): number {\r\n    const Slide = getAt( 0 );\r\n    return Slide && parseFloat( style( Slide.slide, resolve( 'marginRight' ) ) ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the padding value.\r\n   * This method resolves the difference of the direction.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value in pixel.\r\n   */\r\n  function getPadding( right: boolean ): number {\r\n    return parseFloat( style( track, resolve( `padding${ right ? 'Right' : 'Left' }` ) ) ) || 0;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    listSize,\r\n    slideSize,\r\n    sliderSize,\r\n    totalSize,\r\n    getPadding,\r\n  };\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { RequestInterval, RequestIntervalInterface } from '../RequestInterval/RequestInterval';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ThrottleInstance<F extends AnyFunction> extends Function {\r\n  ( ...args: Parameters<F> ): void;\r\n}\r\n\r\n/**\r\n * Returns the throttled function.\r\n *\r\n * @param func     - A function to throttle.\r\n * @param duration - Optional. Throttle duration in milliseconds.\r\n *\r\n * @return A throttled function.\r\n */\r\nexport function Throttle<F extends AnyFunction>(\r\n  func: F,\r\n  duration?: number\r\n): ThrottleInstance<F> {\r\n  let interval: RequestIntervalInterface;\r\n\r\n  function throttled(): void {\r\n    if ( ! interval ) {\r\n      interval = RequestInterval( duration || 0, () => {\r\n        func();\r\n        interval = null;\r\n      }, null, 1 );\r\n\r\n      interval.start();\r\n    }\r\n  }\r\n\r\n  return throttled;\r\n}\r\n","import { EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { addClass, append, before, ceil, empty, pad, push, rect, remove } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Clone component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ClonesComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The multiplier to determine the number of clones.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport const MULTIPLIER = 2;\r\n\r\n/**\r\n * The component that generates clones for the loop slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Clones component object.\r\n */\r\nexport function Clones( Splide: Splide, Components: Components, options: Options ): ClonesComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { Elements, Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * Stores all cloned elements.\r\n   */\r\n  const clones: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Keeps the current number of clones.\r\n   */\r\n  let cloneCount: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, init );\r\n    on( [ EVENT_UPDATED, EVENT_RESIZE ], observe );\r\n  }\r\n\r\n  /**\r\n   * Removes all clones if available, and generates new clones.\r\n   */\r\n  function init(): void {\r\n    if ( ( cloneCount = computeCloneCount() ) ) {\r\n      generate( cloneCount );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys clones.\r\n   */\r\n  function destroy(): void {\r\n    remove( clones );\r\n    empty( clones );\r\n  }\r\n\r\n  /**\r\n   * Observes the required clone count and refreshes the slider if necessary.\r\n   */\r\n  function observe(): void {\r\n    if ( cloneCount < computeCloneCount() ) {\r\n      emit( EVENT_REFRESH );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates the specified number of clones.\r\n   *\r\n   * @param count - The number of clones to generate for each side.\r\n   */\r\n  function generate( count: number ): void {\r\n    const slides = Slides.get().slice();\r\n    const { length } = slides;\r\n\r\n    if ( length ) {\r\n      while ( slides.length < count ) {\r\n        push( slides, slides );\r\n      }\r\n\r\n      push( slides.slice( -count ), slides.slice( 0, count ) ).forEach( ( Slide, index ) => {\r\n        const isHead = index < count;\r\n        const clone  = cloneDeep( Slide.slide, index );\r\n        isHead ? before( clone, slides[ 0 ].slide ) : append( Elements.list, clone );\r\n        push( clones, clone );\r\n        Slides.register( clone, index - count + ( isHead ? 0 : length ), Slide.index );\r\n      } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the provided element with removing the ID attribute.\r\n   *\r\n   * @param elm   - An element to clone.\r\n   * @param index - An index of the clone.\r\n   *\r\n   * @return A cloned element.\r\n   */\r\n  function cloneDeep( elm: HTMLElement, index: number ): HTMLElement {\r\n    const clone = elm.cloneNode( true ) as HTMLElement;\r\n    addClass( clone, options.classes.clone );\r\n    clone.id = `${ Splide.root.id }-clone${ pad( index + 1 ) }`;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Returns the number of elements to generate.\r\n   * This always returns 0 if the slider type is not `'loop'`.\r\n   *\r\n   * @return The number of clones.\r\n   */\r\n  function computeCloneCount(): number {\r\n    let { clones } = options;\r\n\r\n    if ( ! Splide.is( LOOP ) ) {\r\n      clones = 0;\r\n    } else if ( ! clones ) {\r\n      const fixedSize  = options[ resolve( 'fixedWidth' ) ] && Components.Layout.slideSize( 0 );\r\n      const fixedCount = fixedSize && ceil( rect( Elements.track )[ resolve( 'width' ) ] / fixedSize );\r\n      clones = fixedCount || ( options[ resolve( 'autoWidth' ) ] && Splide.length ) || options.perPage * MULTIPLIER;\r\n    }\r\n\r\n    return clones;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","import {\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZED,\r\n  EVENT_SHIFTED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { IDLE, MOVING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, ceil, clamp, isUndefined, rect, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Move component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface MoveComponent extends BaseComponent {\r\n  move( dest: number, index: number, prev: number, callback?: AnyFunction ): void;\r\n  jump( index: number ): void;\r\n  translate( position: number, preventLoop?: boolean ): void;\r\n  shift( position: number, backwards: boolean ): number;\r\n  cancel(): void;\r\n  toIndex( position: number ): number;\r\n  toPosition( index: number, trimming?: boolean ): number;\r\n  getPosition(): number;\r\n  getLimit( max: boolean ): number;\r\n  exceededLimit( max?: boolean | undefined, position?: number ): boolean;\r\n\r\n  /** @internal */\r\n  reposition(): void;\r\n}\r\n\r\n/**\r\n * The component for moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Move component object.\r\n */\r\nexport function Move( Splide: Splide, Components: Components, options: Options ): MoveComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { set } = Splide.state;\r\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components.Layout;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { list, track } = Components.Elements;\r\n\r\n  /**\r\n   * Holds the Transition component.\r\n   */\r\n  let Transition: TransitionComponent;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Transition = Components.Transition;\r\n    on( [ EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH ], reposition );\r\n  }\r\n\r\n  /**\r\n   * Repositions the slider.\r\n   * - Do not call `cancel()` here because LazyLoad may emit resize while transitioning.\r\n   * - iOS Safari emits window resize event while the user swipes the slider because of the bottom bar.\r\n   * - Slide components listening to the internal repositioned event to update their visibility.\r\n   */\r\n  function reposition(): void {\r\n    if ( ! Components.Controller.isBusy() ) {\r\n      Components.Scroll.cancel();\r\n      jump( Splide.index );\r\n      Components.Slides.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the dest index with the Transition component.\r\n   *\r\n   * @param dest     - A destination index to go to, including clones'.\r\n   * @param index    - A slide index.\r\n   * @param prev     - A previous index.\r\n   * @param callback - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function move( dest: number, index: number, prev: number, callback?: AnyFunction ): void {\r\n    const position = getPosition();\r\n\r\n    if ( dest !== index && canShift( dest > index ) ) {\r\n      cancel();\r\n      translate( shift( position, dest > index ), true );\r\n    }\r\n\r\n    set( MOVING );\r\n    emit( EVENT_MOVE, index, prev, dest );\r\n\r\n    Transition.start( index, () => {\r\n      set( IDLE );\r\n      emit( EVENT_MOVED, index, prev, dest );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Jumps to the slide at the specified index.\r\n   *\r\n   * @param index - An index to jump to.\r\n   */\r\n  function jump( index: number ): void {\r\n    translate( toPosition( index, true ) );\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the provided position.\r\n   *\r\n   * @param position    - The position to move to.\r\n   * @param preventLoop - Optional. If `true`, sets the provided position as is.\r\n   */\r\n  function translate( position: number, preventLoop?: boolean ): void {\r\n    if ( ! Splide.is( FADE ) ) {\r\n      const destination = preventLoop ? position : loop( position );\r\n      style( list, 'transform', `translate${ resolve( 'X' ) }(${ destination }px)` );\r\n      position !== destination && emit( EVENT_SHIFTED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loops the provided position if it exceeds bounds.\r\n   *\r\n   * @param position - A position to loop.\r\n   */\r\n  function loop( position: number ): number {\r\n    if ( Splide.is( LOOP ) ) {\r\n      const diff        = orient( position - getPosition() );\r\n      const exceededMin = exceededLimit( false, position ) && diff < 0;\r\n      const exceededMax = exceededLimit( true, position ) && diff > 0;\r\n\r\n      if ( exceededMin || exceededMax ) {\r\n        position = shift( position, exceededMax );\r\n      }\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Adds or subtracts the slider width to the provided position.\r\n   *\r\n   * @param position  - A position to shift.\r\n   * @param backwards - Determines whether to shift the slider backwards or forwards.\r\n   *\r\n   * @return The shifted position.\r\n   */\r\n  function shift( position: number, backwards: boolean ): number {\r\n    const excess = position - getLimit( backwards );\r\n    const size   = sliderSize();\r\n    position -= orient( size * ( ceil( abs( excess ) / size ) || 1 ) ) * ( backwards ? 1 : -1 );\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Cancels transition.\r\n   */\r\n  function cancel(): void {\r\n    translate( getPosition() );\r\n    Transition.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the closest index to the position.\r\n   *\r\n   * @param position - A position to convert.\r\n   *\r\n   * @return The closest index to the position.\r\n   */\r\n  function toIndex( position: number ): number {\r\n    const Slides = Components.Slides.get();\r\n\r\n    let index       = 0;\r\n    let minDistance = Infinity;\r\n\r\n    for ( let i = 0; i < Slides.length; i++ ) {\r\n      const slideIndex = Slides[ i ].index;\r\n      const distance   = abs( toPosition( slideIndex, true ) - position );\r\n\r\n      if ( distance <= minDistance ) {\r\n        minDistance = distance;\r\n        index       = slideIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the position.\r\n   *\r\n   * @param index    - An index to convert.\r\n   * @param trimming - Optional. Whether to trim edge spaces or not.\r\n   *\r\n   * @return The position corresponding with the index.\r\n   */\r\n  function toPosition( index: number, trimming?: boolean ): number {\r\n    const position = orient( totalSize( index - 1 ) - offset( index ) );\r\n    return trimming ? trim( position ) : position;\r\n  }\r\n\r\n  /**\r\n   * Returns the current position.\r\n   *\r\n   * @return The position of the list element.\r\n   */\r\n  function getPosition(): number {\r\n    const left = resolve( 'left' );\r\n    return rect( list )[ left ] - rect( track )[ left ] + orient( getPadding( false ) );\r\n  }\r\n\r\n  /**\r\n   * Trims spaces on the edge of the slider.\r\n   *\r\n   * @param position - A position to trim.\r\n   *\r\n   * @return A trimmed position.\r\n   */\r\n  function trim( position: number ): number {\r\n    if ( options.trimSpace && Splide.is( SLIDE ) ) {\r\n      position = clamp( position, 0, orient( sliderSize() - listSize() ) );\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Returns the offset amount.\r\n   *\r\n   * @param index - An index.\r\n   */\r\n  function offset( index: number ): number {\r\n    const { focus } = options;\r\n    return focus === 'center' ? ( listSize() - slideSize( index, true ) ) / 2 : +focus * slideSize( index ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the limit number that the slider can move to.\r\n   *\r\n   * @param max - Determines whether to return the maximum or minimum limit.\r\n   *\r\n   * @return The border number.\r\n   */\r\n  function getLimit( max: boolean ): number {\r\n    return toPosition( max ? Components.Controller.getEnd() : 0, !! options.trimSpace );\r\n  }\r\n\r\n  /**\r\n   * Checks if there is enough width to shift the slider.\r\n   *\r\n   * @param backwards - `true` for checking backwards, or `false` for doing forwards.\r\n   *\r\n   * @return `true` if the slider can be shifted for the specified direction, or otherwise `false`.\r\n   */\r\n  function canShift( backwards: boolean ): boolean {\r\n    const shifted = orient( shift( getPosition(), backwards ) );\r\n    return backwards\r\n      ? shifted >= 0\r\n      : shifted <= list[ `scroll${ resolve( 'Width' ) }` ] - rect( track )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided position exceeds the minimum or maximum limit or not.\r\n   *\r\n   * @param max      - Optional. `true` for testing max, `false` for min, and `undefined` for both.\r\n   * @param position - Optional. A position to test. If omitted, tests the current position.\r\n   *\r\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\r\n   */\r\n  function exceededLimit( max?: boolean | undefined, position?: number ): boolean {\r\n    position = isUndefined( position ) ? getPosition() : position;\r\n    const exceededMin = max !== true && orient( position ) < orient( getLimit( false ) );\r\n    const exceededMax = max !== false && orient( position ) > orient( getLimit( true ) );\r\n    return exceededMin || exceededMax;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    move,\r\n    jump,\r\n    translate,\r\n    shift,\r\n    cancel,\r\n    toIndex,\r\n    toPosition,\r\n    getPosition,\r\n    getLimit,\r\n    exceededLimit,\r\n    reposition,\r\n  };\r\n}\r\n","import { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { MOVING, SCROLLING } from '../../constants/states';\r\nimport { LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { apply, approximatelyEqual, between, clamp, floor, isString, isUndefined, max } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Controller component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ControllerComponent extends BaseComponent {\r\n  go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void;\r\n  scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\r\n  getNext( destination?: boolean ): number;\r\n  getPrev( destination?: boolean ): number;\r\n  getAdjacent( prev: boolean, destination?: boolean ): number;\r\n  getEnd(): number;\r\n  setIndex( index: number ): void;\r\n  getIndex( prev?: boolean ): number;\r\n  toIndex( page: number ): number;\r\n  toPage( index: number ): number;\r\n  toDest( position: number ): number;\r\n  hasFocus(): boolean;\r\n  isBusy(): boolean;\r\n}\r\n\r\n/**\r\n * The component for controlling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Controller component object.\r\n */\r\nexport function Controller( Splide: Splide, Components: Components, options: Options ): ControllerComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, toPosition } = Move;\r\n  const { isEnough, getLength } = Components.Slides;\r\n  const isLoop  = Splide.is( LOOP );\r\n  const isSlide = Splide.is( SLIDE );\r\n  const getNext = apply( getAdjacent, false );\r\n  const getPrev = apply( getAdjacent, true );\r\n\r\n  /**\r\n   * The current index.\r\n   */\r\n  let currIndex = options.start || 0;\r\n\r\n  /**\r\n   * The previous index.\r\n   */\r\n  let prevIndex = currIndex;\r\n\r\n  /**\r\n   * The latest number of slides.\r\n   */\r\n  let slideCount: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perMove: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perPage: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes some parameters.\r\n   * Needs to check the slides length since the current index may be out of the range after refresh.\r\n   * The process order must be Elements -> Controller -> Move.\r\n   */\r\n  function init(): void {\r\n    slideCount = getLength( true );\r\n    perMove    = options.perMove;\r\n    perPage    = options.perPage;\r\n\r\n    const index = clamp( currIndex, 0, slideCount - 1 );\r\n\r\n    if ( index !== currIndex ) {\r\n      currIndex = index;\r\n      Move.reposition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider by the control pattern.\r\n   *\r\n   * @see `Splide#go()`\r\n   *\r\n   * @param control        - A control pattern.\r\n   * @param allowSameIndex - Optional. Determines whether to allow to go to the current index or not.\r\n   * @param callback       - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void {\r\n    if ( ! isBusy() ) {\r\n      const dest  = parse( control );\r\n      const index = loop( dest );\r\n\r\n      if ( index > -1 && ( allowSameIndex || index !== currIndex ) ) {\r\n        setIndex( index );\r\n        Move.move( dest, index, prevIndex, callback );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the specified destination with updating indices.\r\n   *\r\n   * @param destination - An index to scroll the slider to.\r\n   * @param duration    - Optional. Specifies the scroll duration.\r\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\r\n   * @param callback    - Optional. A callback function invoked after scroll ends.\r\n   */\r\n  function scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void {\r\n    Components.Scroll.scroll( destination, duration, snap, () => {\r\n      setIndex( loop( Move.toIndex( Move.getPosition() ) ) );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Parses the control and returns a slide index.\r\n   *\r\n   * @param control - A control pattern to parse.\r\n   *\r\n   * @return A `dest` index.\r\n   */\r\n  function parse( control: number | string ): number {\r\n    let index = currIndex;\r\n\r\n    if ( isString( control ) ) {\r\n      const [ , indicator, number ] = control.match( /([+\\-<>])(\\d+)?/ ) || [];\r\n\r\n      if ( indicator === '+' || indicator === '-' ) {\r\n        index = computeDestIndex( currIndex + +`${ indicator }${ +number || 1 }`, currIndex );\r\n      } else if ( indicator === '>' ) {\r\n        index = number ? toIndex( +number ) : getNext( true );\r\n      } else if ( indicator === '<' ) {\r\n        index = getPrev( true );\r\n      }\r\n    } else {\r\n      index = isLoop ? control : clamp( control, 0, getEnd() );\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Returns an adjacent destination index.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param prev        - Determines whether to return a previous or next index.\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return An adjacent index if available, or otherwise `-1`.\r\n   */\r\n  function getAdjacent( prev: boolean, destination?: boolean ): number {\r\n    const number = perMove || ( hasFocus() ? 1 : perPage );\r\n    const dest   = computeDestIndex( currIndex + number * ( prev ? -1 : 1 ), currIndex, ! ( perMove || hasFocus() ) );\r\n\r\n    if ( dest === -1 && isSlide ) {\r\n      if ( ! approximatelyEqual( getPosition(), getLimit( ! prev ), 1 ) ) {\r\n        return prev ? 0 : getEnd();\r\n      }\r\n    }\r\n\r\n    return destination ? dest : loop( dest );\r\n  }\r\n\r\n  /**\r\n   * Converts the desired destination index to the valid one.\r\n   * - If the `move` option is `true`, finds the dest index whose position is different with the current one.\r\n   * - This may return clone indices if the editor is the loop mode,\r\n   *   or `-1` if there is no slide to go.\r\n   * - There are still slides where the slider can go if borders are between `from` and `dest`.\r\n   *\r\n   * @param dest     - The desired destination.\r\n   * @param from     - A base index.\r\n   * @param snapPage - Optional. Whether to snap a page or not.\r\n   *\r\n   * @return A converted destination index, including clones.\r\n   */\r\n  function computeDestIndex( dest: number, from: number, snapPage?: boolean ): number {\r\n    if ( isEnough() ) {\r\n      const end   = getEnd();\r\n      const index = computeMovableDestIndex( dest );\r\n\r\n      if ( index !== dest ) {\r\n        from     = dest;\r\n        dest     = index;\r\n        snapPage = false;\r\n      }\r\n\r\n      if ( dest < 0 || dest > end ) {\r\n        if ( between( 0, dest, from, true ) || between( end, from, dest, true ) ) {\r\n          dest = toIndex( toPage( dest ) );\r\n        } else {\r\n          if ( isLoop ) {\r\n            dest = snapPage\r\n              ? dest < 0 ? - ( slideCount % perPage || perPage ) : slideCount\r\n              : dest;\r\n          } else if ( options.rewind ) {\r\n            dest = dest < 0 ? end : 0;\r\n          } else {\r\n            dest = -1;\r\n          }\r\n        }\r\n      } else {\r\n        if ( snapPage && dest !== from ) {\r\n          dest = toIndex( toPage( from ) + ( dest < from ? -1 : 1 ) );\r\n        }\r\n      }\r\n    } else {\r\n      dest = -1;\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Finds the dest index whose position is different with the current one.\r\n   * This can be negative or greater than `length - 1`.\r\n   *\r\n   * @param dest - A dest index.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function computeMovableDestIndex( dest: number ): number {\r\n    if ( isSlide && options.trimSpace === 'move' && dest !== currIndex ) {\r\n      const position = getPosition();\r\n\r\n      while ( position === toPosition( dest, true ) && between( dest, 0, Splide.length - 1, ! options.rewind ) ) {\r\n        dest < currIndex ? --dest : ++dest;\r\n      }\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Loops the provided index only in the loop mode.\r\n   *\r\n   * @param index - An index to loop.\r\n   *\r\n   * @return A looped index.\r\n   */\r\n  function loop( index: number ): number {\r\n    return isLoop ? ( index + slideCount ) % slideCount || 0 : index;\r\n  }\r\n\r\n  /**\r\n   * Returns the end index where the slider can go.\r\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\r\n   * the slider can go to the slide 8 (the index is 7).\r\n   *\r\n   * @return An end index.\r\n   */\r\n  function getEnd(): number {\r\n    return max( slideCount - ( hasFocus() || ( isLoop && perMove ) ? 1 : perPage ), 0 );\r\n  }\r\n\r\n  /**\r\n   * Converts the page index to the slide index.\r\n   *\r\n   * @param page - A page index to convert.\r\n   *\r\n   * @return A slide index.\r\n   */\r\n  function toIndex( page: number ): number {\r\n    return clamp( hasFocus() ? page : perPage * page, 0, getEnd() );\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the page index.\r\n   *\r\n   * @param index - An index to convert.\r\n   *\r\n   * @return A page index.\r\n   */\r\n  function toPage( index: number ): number {\r\n    return hasFocus()\r\n      ? index\r\n      : floor( ( index >= getEnd() ? slideCount - 1 : index ) / perPage );\r\n  }\r\n\r\n  /**\r\n   * Converts the destination position to the dest index.\r\n   *\r\n   * @param destination - A position to convert.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function toDest( destination: number ): number {\r\n    const closest = Move.toIndex( destination );\r\n    return isSlide ? clamp( closest, 0, getEnd() ) : closest;\r\n  }\r\n\r\n  /**\r\n   * Sets a new index and retains old one.\r\n   *\r\n   * @param index - A new index to set.\r\n   */\r\n  function setIndex( index: number ): void {\r\n    if ( index !== currIndex ) {\r\n      prevIndex = currIndex;\r\n      currIndex = index;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the current/previous index.\r\n   *\r\n   * @param prev - Optional. Whether to return previous index or not.\r\n   */\r\n  function getIndex( prev?: boolean ): number {\r\n    return prev ? prevIndex : currIndex;\r\n  }\r\n\r\n  /**\r\n   * Verifies if the focus option is available or not.\r\n   *\r\n   * @return `true` if the slider has the focus option.\r\n   */\r\n  function hasFocus(): boolean {\r\n    return ! isUndefined( options.focus ) || options.isNavigation;\r\n  }\r\n\r\n  /**\r\n   * Checks if the slider is moving/scrolling or not.\r\n   *\r\n   * @return `true` if the slider can move, or otherwise `false`.\r\n   */\r\n  function isBusy(): boolean {\r\n    return Splide.state.is( [ MOVING, SCROLLING ] ) && !! options.waitForTransition;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    go,\r\n    scroll,\r\n    getNext,\r\n    getPrev,\r\n    getAdjacent,\r\n    getEnd,\r\n    setIndex,\r\n    getIndex,\r\n    toIndex,\r\n    toPage,\r\n    toDest,\r\n    hasFocus,\r\n    isBusy,\r\n  };\r\n}\r\n","import { ALL_ATTRIBUTES, ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport { CLASS_ARROWS } from '../../constants/classes';\r\nimport {\r\n  EVENT_ARROWS_MOUNTED,\r\n  EVENT_ARROWS_UPDATED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  append,\r\n  apply,\r\n  assign,\r\n  before,\r\n  create,\r\n  display,\r\n  parseHtml,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { PATH, SIZE, XML_NAME_SPACE } from './path';\r\n\r\n\r\n/**\r\n * The interface for the Arrows component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ArrowsComponent extends BaseComponent {\r\n  arrows: { prev?: HTMLButtonElement, next?: HTMLButtonElement };\r\n}\r\n\r\n/**\r\n * The component for handling previous and next arrows.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Arrows component object.\r\n */\r\nexport function Arrows( Splide: Splide, Components: Components, options: Options ): ArrowsComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, bind, emit } = event;\r\n  const { classes, i18n } = options;\r\n  const { Elements, Controller } = Components;\r\n  const { arrows: userArrows, track } = Elements;\r\n\r\n  /**\r\n   * The wrapper element.\r\n   */\r\n  let wrapper = userArrows;\r\n\r\n  /**\r\n   * The previous arrow element.\r\n   */\r\n  let prev = Elements.prev;\r\n\r\n  /**\r\n   * The next arrow element.\r\n   */\r\n  let next = Elements.next;\r\n\r\n  /**\r\n   * Indicates whether the component creates arrows or retrieved from the DOM.\r\n   */\r\n  let created: boolean;\r\n\r\n  /**\r\n   * Holds modifier classes.\r\n   */\r\n  let wrapperClasses: string;\r\n\r\n  /**\r\n   * An object with previous and next arrows.\r\n   */\r\n  const arrows: ArrowsComponent[ 'arrows' ] = {};\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, remount );\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const enabled = options.arrows;\r\n\r\n    if ( enabled && ! ( prev && next ) ) {\r\n      createArrows();\r\n    }\r\n\r\n    if ( prev && next ) {\r\n      assign( arrows, { prev, next } );\r\n      display( wrapper, enabled ? '' : 'none' );\r\n      addClass( wrapper, ( wrapperClasses = `${ CLASS_ARROWS }--${ options.direction }` ) );\r\n\r\n      if ( enabled ) {\r\n        listen();\r\n        update();\r\n        setAttribute( [ prev, next ], ARIA_CONTROLS, track.id );\r\n        emit( EVENT_ARROWS_MOUNTED, prev, next );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    event.destroy();\r\n    removeClass( wrapper, wrapperClasses );\r\n\r\n    if ( created ) {\r\n      remove( userArrows ? [ prev, next ] : wrapper );\r\n      prev = next = null;\r\n    } else {\r\n      removeAttribute( [ prev, next ], ALL_ATTRIBUTES );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    on( [ EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED ], update );\r\n    bind( next, 'click', apply( go, '>' ) );\r\n    bind( prev, 'click', apply( go, '<' ) );\r\n  }\r\n\r\n  /**\r\n   * The wrapper function of Controller#go().\r\n   *\r\n   * @param control - The control pattern.\r\n   */\r\n  function go( control: string ): void {\r\n    Controller.go( control, true );\r\n  }\r\n\r\n  /**\r\n   * Create arrows and append them to the slider.\r\n   */\r\n  function createArrows(): void {\r\n    wrapper = userArrows || create( 'div', classes.arrows );\r\n    prev    = createArrow( true );\r\n    next    = createArrow( false );\r\n    created = true;\r\n\r\n    append( wrapper, [ prev, next ] );\r\n    ! userArrows && before( wrapper, track );\r\n  }\r\n\r\n  /**\r\n   * Creates an arrow button.\r\n   * In IE, A SVG element is focusable.\r\n   *\r\n   * @param prev - Determines whether to create a previous or next arrow.\r\n   *\r\n   * @return A created button element.\r\n   */\r\n  function createArrow( prev: boolean ): HTMLButtonElement {\r\n    const arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\r\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\" focusable=\"false\">`\r\n      + `<path d=\"${ options.arrowPath || PATH }\" />`;\r\n\r\n    return parseHtml<HTMLButtonElement>( arrow );\r\n  }\r\n\r\n  /**\r\n   * Updates status of arrows, such as `disabled` and `aria-label`.\r\n   */\r\n  function update(): void {\r\n    const index     = Splide.index;\r\n    const prevIndex = Controller.getPrev();\r\n    const nextIndex = Controller.getNext();\r\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\r\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\r\n\r\n    prev.disabled = prevIndex < 0;\r\n    next.disabled = nextIndex < 0;\r\n\r\n    setAttribute( prev, ARIA_LABEL, prevLabel );\r\n    setAttribute( next, ARIA_LABEL, nextLabel );\r\n\r\n    emit( EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex );\r\n  }\r\n\r\n  return {\r\n    arrows,\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","/**\r\n * The namespace for SVG elements.\r\n */\r\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * The arrow path.\r\n */\r\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\r\n\r\n/**\r\n * SVG width and height.\r\n */\r\nexport const SIZE = 40;\r\n","import { ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport { CLASS_ACTIVE } from '../../constants/classes';\r\nimport {\r\n  EVENT_AUTOPLAY_PAUSE,\r\n  EVENT_AUTOPLAY_PLAY,\r\n  EVENT_AUTOPLAY_PLAYING,\r\n  EVENT_MOVE,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n} from '../../constants/events';\r\nimport { EventInterface, RequestInterval } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { getAttribute, setAttribute, style, toggleClass } from '../../utils';\r\nimport { INTERVAL_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Autoplay component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface AutoplayComponent extends BaseComponent {\r\n  play(): void;\r\n  pause(): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * The component for auto playing sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Autoplay component object.\r\n */\r\nexport function Autoplay( Splide: Splide, Components: Components, options: Options ): AutoplayComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const interval = RequestInterval( options.interval, Splide.go.bind( Splide, '>' ), onAnimationFrame );\r\n  const { isPaused } = interval;\r\n  const { Elements, Elements: { root, toggle } } = Components;\r\n  const { autoplay } = options;\r\n\r\n  /**\r\n   * Indicates whether the slider is hovered or not.\r\n   */\r\n  let hovered: boolean;\r\n\r\n  /**\r\n   * Indicates whether one of slider elements has focus or not.\r\n   */\r\n  let focused: boolean;\r\n\r\n  /**\r\n   * Indicates whether the autoplay is stopped or not.\r\n   * If stopped, autoplay won't start automatically unless `play()` is explicitly called.\r\n   */\r\n  let stopped = autoplay === 'pause';\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( autoplay ) {\r\n      listen();\r\n      toggle && setAttribute( toggle, ARIA_CONTROLS, Elements.track.id );\r\n      stopped || play();\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    if ( options.pauseOnHover ) {\r\n      bind( root, 'mouseenter mouseleave', e => {\r\n        hovered = e.type === 'mouseenter';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( options.pauseOnFocus ) {\r\n      bind( root, 'focusin focusout', e => {\r\n        focused = e.type === 'focusin';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( toggle ) {\r\n      bind( toggle, 'click', () => {\r\n        stopped ? play() : pause( true );\r\n      } );\r\n    }\r\n\r\n    on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH ], interval.rewind );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Starts autoplay and clears all flags.\r\n   */\r\n  function play(): void {\r\n    if ( isPaused() && Components.Slides.isEnough() ) {\r\n      interval.start( ! options.resetProgress );\r\n      focused = hovered = stopped = false;\r\n      update();\r\n      emit( EVENT_AUTOPLAY_PLAY );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pauses autoplay.\r\n   *\r\n   * @param stop - If `true`, autoplay keeps paused until `play()` is explicitly called.\r\n   */\r\n  function pause( stop = true ): void {\r\n    stopped = !! stop;\r\n    update();\r\n\r\n    if ( ! isPaused() ) {\r\n      interval.pause();\r\n      emit( EVENT_AUTOPLAY_PAUSE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles play/pause according to current flags.\r\n   * If autoplay is manually paused, this will do nothing.\r\n   */\r\n  function autoToggle(): void {\r\n    if ( ! stopped ) {\r\n      hovered || focused ? pause( false ) : play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the toggle button status.\r\n   */\r\n  function update(): void {\r\n    if ( toggle ) {\r\n      toggleClass( toggle, CLASS_ACTIVE, ! stopped );\r\n      setAttribute( toggle, ARIA_LABEL, options.i18n[ stopped ? 'play' : 'pause' ] );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called on every animation frame while autoplay is active.\r\n   *\r\n   * @param rate - The progress rate between 0 to 1.\r\n   */\r\n  function onAnimationFrame( rate: number ): void {\r\n    const { bar } = Elements;\r\n    bar && style( bar, 'width', `${ rate * 100 }%` );\r\n    emit( EVENT_AUTOPLAY_PLAYING, rate );\r\n  }\r\n\r\n  /**\r\n   * Updates or restores the interval duration.\r\n   *\r\n   * @param index - An index to move to.\r\n   */\r\n  function onMove( index: number ): void {\r\n    const Slide = Components.Slides.getAt( index );\r\n    interval.set( Slide && +getAttribute( Slide.slide, INTERVAL_DATA_ATTRIBUTE ) || options.interval );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: interval.cancel,\r\n    play,\r\n    pause,\r\n    isPaused,\r\n  };\r\n}\r\n","import { EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { apply, child, display } from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\n\r\n\r\n/**\r\n * The interface for the Cover component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface CoverComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for setting the image as the slide background.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Cover component object.\r\n */\r\nexport function Cover( Splide: Splide, Components: Components, options: Options ): CoverComponent {\r\n  const { on } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.cover ) {\r\n      on( EVENT_LAZYLOAD_LOADED, apply( toggle, true ) );\r\n      on( [ EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH ], apply( cover, true ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets/removes the background image to/from all slides.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   */\r\n  function cover( cover: boolean ): void {\r\n    Components.Slides.forEach( Slide => {\r\n      const img = child<HTMLImageElement>( Slide.container || Slide.slide, 'img' );\r\n\r\n      if ( img && img.src ) {\r\n        toggle( cover, img, Slide );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Sets/removes the background image to/from the parent element.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   * @param img   - A target image element.\r\n   * @param Slide - A SlideComponent object where the image belongs.\r\n   */\r\n  function toggle( cover: boolean, img: HTMLImageElement, Slide: SlideComponent ): void {\r\n    Slide.style( 'background', cover ? `center/cover no-repeat url(\"${ img.src }\")` : '', true );\r\n    display( img, cover ? 'none' : '' );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: apply( cover, false ),\r\n  };\r\n}\r\n","import { EVENT_MOVE, EVENT_REFRESH, EVENT_SCROLL, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\r\nimport { IDLE, SCROLLING } from '../../constants/states';\r\nimport { SLIDE } from '../../constants/types';\r\nimport { EventInterface, RequestInterval, RequestIntervalInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { abs, apply, approximatelyEqual, floor, max, sign } from '../../utils';\r\nimport { BASE_VELOCITY, BOUNCE_DIFF_THRESHOLD, BOUNCE_DURATION, FRICTION_FACTOR, MIN_DURATION } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Scroll component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ScrollComponent extends BaseComponent {\r\n  scroll( position: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\r\n  cancel(): void;\r\n}\r\n\r\n/**\r\n * The component for scrolling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Scroll component object.\r\n */\r\nexport function Scroll( Splide: Splide, Components: Components, options: Options ): ScrollComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { state: { set } } = Splide;\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, exceededLimit, translate } = Move;\r\n\r\n  /**\r\n   * Retains the active RequestInterval object.\r\n   */\r\n  let interval: RequestIntervalInterface;\r\n\r\n  /**\r\n   * Holds the callback function.\r\n   */\r\n  let callback: AnyFunction;\r\n\r\n  /**\r\n   * The current friction (<= 1).\r\n   */\r\n  let friction = 1;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_MOVE, clear );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], cancel );\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the provided destination.\r\n   *\r\n   * @param destination - The destination to scroll the slider to.\r\n   * @param duration    - Optional. The scroll duration. If omitted, calculates it by the distance.\r\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\r\n   * @param onScrolled  - Optional. A callback invoked after scroll ends.\r\n   * @param noConstrain - Optional. Whether to suppress constraint process when the slider exceeds bounds.\r\n   */\r\n  function scroll(\r\n    destination: number,\r\n    duration?: number,\r\n    snap?: boolean,\r\n    onScrolled?: AnyFunction,\r\n    noConstrain?: boolean\r\n  ): void {\r\n    const from = getPosition();\r\n\r\n    clear();\r\n\r\n    if ( snap ) {\r\n      const size   = Components.Layout.sliderSize();\r\n      const offset = sign( destination ) * size * floor( abs( destination ) / size ) || 0;\r\n      destination = Move.toPosition( Components.Controller.toDest( destination % size ) ) + offset;\r\n    }\r\n\r\n    const noDistance = approximatelyEqual( from, destination, 1 );\r\n\r\n    friction = 1;\r\n    duration = noDistance ? 0 : duration || max( abs( destination - from ) / BASE_VELOCITY, MIN_DURATION );\r\n    callback = onScrolled;\r\n    interval = RequestInterval( duration, onEnd, apply( update, from, destination, noConstrain ), 1 );\r\n\r\n    set( SCROLLING );\r\n    emit( EVENT_SCROLL );\r\n    interval.start();\r\n  }\r\n\r\n  /**\r\n   * Called when scroll ends or has been just canceled.\r\n   */\r\n  function onEnd(): void {\r\n    set( IDLE );\r\n    callback && callback();\r\n    emit( EVENT_SCROLLED );\r\n  }\r\n\r\n  /**\r\n   * Called whenever the interval timer is updated.\r\n   *\r\n   * @param from        - A position where scroll starts.\r\n   * @param to          - A destination where the slider goes.\r\n   * @param noConstrain - Whether to suppress constraint process when the slider exceeds bounds.\r\n   * @param rate        - A current rate.\r\n   */\r\n  function update( from: number, to: number, noConstrain: boolean | undefined, rate: number ): void {\r\n    const position = getPosition();\r\n    const target   = from + ( to - from ) * easing( rate );\r\n    const diff     = ( target - position ) * friction;\r\n\r\n    translate( position + diff );\r\n\r\n    if ( Splide.is( SLIDE ) && ! noConstrain && exceededLimit() ) {\r\n      friction *= FRICTION_FACTOR;\r\n\r\n      if ( abs( diff ) < BOUNCE_DIFF_THRESHOLD ) {\r\n        scroll( getLimit( exceededLimit( true ) ), BOUNCE_DURATION, false, undefined, true );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the active interval.\r\n   */\r\n  function clear(): void {\r\n    if ( interval ) {\r\n      interval.cancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the active interval and emits the `scrolled` event.\r\n   */\r\n  function cancel(): void {\r\n    if ( interval && ! interval.isPaused() ) {\r\n      clear();\r\n      onEnd();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The easing function.\r\n   *\r\n   * @param t - A value to ease.\r\n   *\r\n   * @return An eased value.\r\n   */\r\n  function easing( t: number ): number {\r\n    const { easingFunc } = options;\r\n    return easingFunc ? easingFunc( t ) : 1 - Math.pow( 1 - t, 4 );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: clear,\r\n    scroll,\r\n    cancel,\r\n  };\r\n}\r\n","/**\r\n * Triggers the bounce effect when the diff becomes less than this value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DIFF_THRESHOLD = 10;\r\n\r\n/**\r\n * The duration of the bounce effect.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DURATION = 600;\r\n\r\n/**\r\n * The friction factor.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION_FACTOR = 0.6;\r\n\r\n/**\r\n * The velocity to calculate the scroll duration.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BASE_VELOCITY = 1.5;\r\n\r\n/**\r\n * The minimum duration of scroll.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const MIN_DURATION = 800;\r\n","import { CLASS_ARROW, CLASS_PAGINATION_PAGE } from '../../constants/classes';\r\nimport { EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_MOUNTED, EVENT_UPDATED } from '../../constants/events';\r\nimport { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { DRAGGING, IDLE, MOVING, SCROLLING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, isObject, matches, min, noop, prevent, sign, timeOf } from '../../utils';\r\nimport { FRICTION, LOG_INTERVAL, POINTER_DOWN_EVENTS, POINTER_MOVE_EVENTS, POINTER_UP_EVENTS } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Drag component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DragComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n  isDragging(): boolean;\r\n}\r\n\r\n/**\r\n * The component for dragging the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Drag component object.\r\n */\r\nexport function Drag( Splide: Splide, Components: Components, options: Options ): DragComponent {\r\n  const { on, emit, bind, unbind } = EventInterface( Splide );\r\n  const { state } = Splide;\r\n  const { Move, Scroll, Controller, Elements: { track }, Media: { reduce } } = Components;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { getPosition, exceededLimit } = Move;\r\n\r\n  /**\r\n   * The base slider position to calculate the delta of coords.\r\n   */\r\n  let basePosition: number;\r\n\r\n  /**\r\n   * The base event object saved per specific sampling interval.\r\n   */\r\n  let baseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Holds the previous base event object.\r\n   */\r\n  let prevBaseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Indicates whether the drag mode is `free` or not.\r\n   */\r\n  let isFree: boolean;\r\n\r\n  /**\r\n   * Indicates whether the user is dragging the slider or not.\r\n   */\r\n  let dragging: boolean;\r\n\r\n  /**\r\n   * Indicates whether the slider exceeds limits or not.\r\n   * This must not be `undefined` for strict comparison.\r\n   */\r\n  let exceeded = false;\r\n\r\n  /**\r\n   * Turns into `true` when the user starts dragging the slider.\r\n   */\r\n  let clickPrevented: boolean;\r\n\r\n  /**\r\n   * Indicates whether the drag component is now disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * The target element to attach listeners.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, 'click', onClick, { capture: true } );\r\n    bind( track, 'dragstart', prevent );\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { drag } = options;\r\n    disable( ! drag );\r\n    isFree = drag === 'free';\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks or touches the slider.\r\n   * - Needs to prevent the default behaviour when the slider is busy to deny any action, such as dragging images\r\n   * - IE does not support MouseEvent and TouchEvent constructors\r\n   * - The `dragging` state always becomes `true` when the user starts dragging while the slider is moving\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerDown( e: TouchEvent | MouseEvent ): void {\r\n    clickPrevented = false;\r\n\r\n    if ( ! disabled ) {\r\n      const isTouch = isTouchEvent( e );\r\n\r\n      if ( isDraggable( e.target ) && ( isTouch || ! e.button ) ) {\r\n        if ( ! Controller.isBusy() ) {\r\n          target        = isTouch ? track : window;\r\n          dragging      = state.is( [ MOVING, SCROLLING ] );\r\n          prevBaseEvent = null;\r\n\r\n          bind( target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS );\r\n          bind( target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS );\r\n          Move.cancel();\r\n          Scroll.cancel();\r\n          save( e );\r\n        } else {\r\n          prevent( e, true );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called while the user moves the pointer on the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerMove( e: TouchEvent | MouseEvent ): void {\r\n    if ( ! state.is( DRAGGING ) ) {\r\n      state.set( DRAGGING );\r\n      emit( EVENT_DRAG );\r\n    }\r\n\r\n    if ( e.cancelable ) {\r\n      if ( dragging ) {\r\n        Move.translate( basePosition + constrain( diffCoord( e ) ) );\r\n\r\n        const expired     = diffTime( e ) > LOG_INTERVAL;\r\n        const hasExceeded = exceeded !== ( exceeded = exceededLimit() );\r\n\r\n        if ( expired || hasExceeded ) {\r\n          save( e );\r\n        }\r\n\r\n        clickPrevented = true;\r\n        emit( EVENT_DRAGGING );\r\n        prevent( e );\r\n      } else if ( isSliderDirection( e ) ) {\r\n        dragging = shouldStart( e );\r\n        prevent( e );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user releases pointing devices.\r\n   * Needs to move the slider when:\r\n   * - The user drags the slider and the distance exceeds the threshold\r\n   * - The user aborted the slider moving by pointerdown and just released it without dragging the slider\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerUp( e: TouchEvent | MouseEvent ): void {\r\n    if ( state.is( DRAGGING ) ) {\r\n      state.set( IDLE );\r\n      emit( EVENT_DRAGGED );\r\n    }\r\n\r\n    if ( dragging ) {\r\n      move( e );\r\n      prevent( e );\r\n    }\r\n\r\n    unbind( target, POINTER_MOVE_EVENTS, onPointerMove );\r\n    unbind( target, POINTER_UP_EVENTS, onPointerUp );\r\n    dragging = false;\r\n  }\r\n\r\n  /**\r\n   * Called when the track element is clicked.\r\n   * Disables click any elements inside it while dragging.\r\n   *\r\n   * @param e - A MouseEvent object.\r\n   */\r\n  function onClick( e: MouseEvent ): void {\r\n    if ( ! disabled && clickPrevented ) {\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves data at the specific moment.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   */\r\n  function save( e: TouchEvent | MouseEvent ): void {\r\n    prevBaseEvent = baseEvent;\r\n    baseEvent     = e;\r\n    basePosition  = getPosition();\r\n  }\r\n\r\n  /**\r\n   * Calculates the destination by the drag velocity and moves the carousel.\r\n   * If motion is reduced, restores transition speed to the initial value\r\n   * because it's \"essential\" motion for the user to recognize what happens on the carousel.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   */\r\n  function move( e: TouchEvent | MouseEvent ): void {\r\n    const velocity    = computeVelocity( e );\r\n    const destination = computeDestination( velocity );\r\n    const rewind      = options.rewind && options.rewindByDrag;\r\n\r\n    reduce( false );\r\n\r\n    if ( isFree ) {\r\n      Controller.scroll( destination, 0, options.snap );\r\n    } else if ( Splide.is( FADE ) ) {\r\n      Controller.go( orient( sign( velocity ) ) < 0 ? ( rewind ? '<' : '-' ) : ( rewind ? '>' : '+' ) );\r\n    } else if ( Splide.is( SLIDE ) && exceeded && rewind ) {\r\n      Controller.go( exceededLimit( true ) ? '>' : '<' );\r\n    } else {\r\n      Controller.go( Controller.toDest( destination ), true );\r\n    }\r\n\r\n    reduce( true );\r\n  }\r\n\r\n  /**\r\n   * Checks if the drag distance exceeds the defined threshold.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return `true` if the distance exceeds the threshold, or `false` if not.\r\n   */\r\n  function shouldStart( e: TouchEvent | MouseEvent ): boolean {\r\n    const { dragMinThreshold: thresholds } = options;\r\n    const isObj = isObject( thresholds );\r\n    const mouse = isObj && thresholds.mouse || 0;\r\n    const touch = ( isObj ? thresholds.touch : +thresholds ) || 10;\r\n    return abs( diffCoord( e ) ) > ( isTouchEvent( e ) ? touch : mouse );\r\n  }\r\n\r\n  /**\r\n   * Checks whether dragging towards the slider or the scroll direction.\r\n   *\r\n   * @return `true` if dragging towards the slider direction, or otherwise `false`.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function isSliderDirection( e: TouchEvent | MouseEvent ): boolean {\r\n    return abs( diffCoord( e ) ) > abs( diffCoord( e, true ) );\r\n  }\r\n\r\n  /**\r\n   * Computes the drag velocity.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   *\r\n   * @return The drag velocity.\r\n   */\r\n  function computeVelocity( e: TouchEvent | MouseEvent ): number {\r\n    if ( Splide.is( LOOP ) || ! exceeded ) {\r\n      const time = diffTime( e );\r\n\r\n      if ( time && time < LOG_INTERVAL ) {\r\n        return diffCoord( e ) / time;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Computes the destination by the velocity and the `flickPower` option.\r\n   *\r\n   * @param velocity - The drag velocity.\r\n   *\r\n   * @return The destination.\r\n   */\r\n  function computeDestination( velocity: number ): number {\r\n    return getPosition() + sign( velocity ) * min(\r\n      abs( velocity ) * ( options.flickPower || 600 ),\r\n      isFree ? Infinity : Components.Layout.listSize() * ( options.flickMaxPages || 1 )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coord difference between the provided and base events.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return The difference of the coord.\r\n   */\r\n  function diffCoord( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return coordOf( e, orthogonal ) - coordOf( getBaseEvent( e ), orthogonal );\r\n  }\r\n\r\n  /**\r\n   * Returns the elapsed time from the base event to `e`.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return The elapsed time in milliseconds.\r\n   */\r\n  function diffTime( e: TouchEvent | MouseEvent ): number {\r\n    return timeOf( e ) - timeOf( getBaseEvent( e ) );\r\n  }\r\n\r\n  /**\r\n   * Returns the base event.\r\n   * If the base event is same with `e`, returns previous one.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return A base event.\r\n   */\r\n  function getBaseEvent( e: TouchEvent | MouseEvent ): TouchEvent | MouseEvent {\r\n    return baseEvent === e && prevBaseEvent || baseEvent;\r\n  }\r\n\r\n  /**\r\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\r\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return A pageX or pageY coordinate.\r\n   */\r\n  function coordOf( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return ( isTouchEvent( e ) ? e.changedTouches[ 0 ] : e )[ `page${ resolve( orthogonal ? 'Y' : 'X' ) }` ];\r\n  }\r\n\r\n  /**\r\n   * Reduces the distance to move by the predefined friction.\r\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\r\n   *\r\n   * @param diff - Diff to constrain.\r\n   *\r\n   * @return The constrained diff.\r\n   */\r\n  function constrain( diff: number ): number {\r\n    return diff / ( exceeded && Splide.is( SLIDE ) ? FRICTION : 1 );\r\n  }\r\n\r\n  /**\r\n   * Returns `true` if the user can drag the target.\r\n   *\r\n   * @param target - An event target.\r\n   *\r\n   * @return `true` if the target is draggable.\r\n   */\r\n  function isDraggable( target: EventTarget ): boolean {\r\n    const { noDrag } = options;\r\n\r\n    return ! matches( target, `.${ CLASS_PAGINATION_PAGE }, .${ CLASS_ARROW }` )\r\n      && ( ! noDrag || ! matches( target, noDrag ) );\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided event is TouchEvent or MouseEvent.\r\n   *\r\n   * @param e - An event to check.\r\n   *\r\n   * @return `true` if the `e` is TouchEvent.\r\n   */\r\n  function isTouchEvent( e: TouchEvent | MouseEvent ): e is TouchEvent {\r\n    return typeof TouchEvent !== 'undefined' && e instanceof TouchEvent;\r\n  }\r\n\r\n  /**\r\n   * Checks if now the user is dragging the slider or not.\r\n   *\r\n   * @return `true` if the user is dragging the slider or otherwise `false`.\r\n   */\r\n  function isDragging(): boolean {\r\n    return dragging;\r\n  }\r\n\r\n  /**\r\n   * Disables the component.\r\n   *\r\n   * @param value - Set `true` to disable the component.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    isDragging,\r\n  };\r\n}\r\n","import { CLASS_LOADING } from '../../constants/classes';\r\nimport {\r\n  EVENT_LAZYLOAD_LOADED,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZE,\r\n  EVENT_SCROLLED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  apply,\r\n  child,\r\n  create,\r\n  display,\r\n  empty,\r\n  getAttribute,\r\n  queryAll,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\nimport { IMAGE_SELECTOR, SRC_DATA_ATTRIBUTE, SRCSET_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the LazyLoad component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LazyLoadComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The type for each entry.\r\n * Use tuple for better compression.\r\n *\r\n * @since 4.0.0\r\n */\r\ntype LazyLoadEntry = [ HTMLImageElement, SlideComponent, HTMLSpanElement ];\r\n\r\n/**\r\n * The component for lazily loading images.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An LazyLoad component object.\r\n */\r\nexport function LazyLoad( Splide: Splide, Components: Components, options: Options ): LazyLoadComponent {\r\n  const { on, off, bind, emit } = EventInterface( Splide );\r\n  const isSequential = options.lazyLoad === 'sequential';\r\n  const events       = [ EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED, EVENT_SCROLLED ];\r\n\r\n  /**\r\n   * Stores data of images.\r\n   */\r\n  let entries: LazyLoadEntry[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.lazyLoad ) {\r\n      init();\r\n      on( EVENT_REFRESH, init );\r\n      isSequential || on( events, observe );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds images to register entries.\r\n   * Note that spinner can be already available because of `refresh()`.\r\n   */\r\n  function init() {\r\n    empty( entries );\r\n\r\n    Components.Slides.forEach( Slide => {\r\n      queryAll<HTMLImageElement>( Slide.slide, IMAGE_SELECTOR ).forEach( img => {\r\n        const src    = getAttribute( img, SRC_DATA_ATTRIBUTE );\r\n        const srcset = getAttribute( img, SRCSET_DATA_ATTRIBUTE );\r\n\r\n        if ( src !== img.src || srcset !== img.srcset ) {\r\n          const className = options.classes.spinner;\r\n          const parent    = img.parentElement;\r\n          const spinner   = child( parent, `.${ className }` ) || create( 'span', className, parent );\r\n\r\n          entries.push( [ img, Slide, spinner ] );\r\n          img.src || display( img, 'none' );\r\n        }\r\n      } );\r\n    } );\r\n\r\n    isSequential && loadNext();\r\n  }\r\n\r\n  /**\r\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\r\n   * The last `+1` is for the current page.\r\n   */\r\n  function observe(): void {\r\n    entries = entries.filter( data => {\r\n      const distance = options.perPage * ( ( options.preloadPages || 1 ) + 1 ) - 1;\r\n      return data[ 1 ].isWithin( Splide.index, distance ) ? load( data ) : true;\r\n    } );\r\n\r\n    entries.length || off( events );\r\n  }\r\n\r\n  /**\r\n   * Starts loading the image in the data.\r\n   *\r\n   * @param data - A LazyLoadEntry object.\r\n   */\r\n  function load( data: LazyLoadEntry ): void {\r\n    const [ img ] = data;\r\n\r\n    addClass( data[ 1 ].slide, CLASS_LOADING );\r\n    bind( img, 'load error', apply( onLoad, data ) );\r\n\r\n    setAttribute( img, 'src', getAttribute( img, SRC_DATA_ATTRIBUTE ) );\r\n    setAttribute( img, 'srcset', getAttribute( img, SRCSET_DATA_ATTRIBUTE ) );\r\n    removeAttribute( img, SRC_DATA_ATTRIBUTE );\r\n    removeAttribute( img, SRCSET_DATA_ATTRIBUTE );\r\n  }\r\n\r\n  /**\r\n   * Called when the image is loaded or any error occurs.\r\n   *\r\n   * @param data - A LazyLoadEntry object.\r\n   * @param e    - An Event object.\r\n   */\r\n  function onLoad( data: LazyLoadEntry, e: Event ): void {\r\n    const [ img, Slide ] = data;\r\n\r\n    removeClass( Slide.slide, CLASS_LOADING );\r\n\r\n    if ( e.type !== 'error' ) {\r\n      remove( data[ 2 ] );\r\n      display( img, '' );\r\n      emit( EVENT_LAZYLOAD_LOADED, img, Slide );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n\r\n    isSequential && loadNext();\r\n  }\r\n\r\n  /**\r\n   * Starts loading a next image.\r\n   */\r\n  function loadNext(): void {\r\n    entries.length && load( entries.shift() );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: apply( empty, entries ),\r\n  };\r\n}\r\n","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\r\nimport {\r\n  ARIA_CONTROLS,\r\n  ARIA_LABEL,\r\n  ARIA_ORIENTATION,\r\n  ARIA_SELECTED,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport { CLASS_ACTIVE, CLASS_PAGINATION } from '../../constants/classes';\r\nimport { TTB } from '../../constants/directions';\r\nimport {\r\n  EVENT_MOVE,\r\n  EVENT_PAGINATION_MOUNTED,\r\n  EVENT_PAGINATION_UPDATED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  apply,\r\n  ceil,\r\n  create,\r\n  empty,\r\n  focus,\r\n  format,\r\n  prevent,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  slice,\r\n} from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\n\r\n\r\n/**\r\n * The interface for the Pagination component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationComponent extends BaseComponent {\r\n  items: PaginationItem[];\r\n  getAt( index: number ): PaginationItem;\r\n  update(): void;\r\n}\r\n\r\n/**\r\n * The interface for data of the pagination.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationData {\r\n  list: HTMLUListElement;\r\n  items: PaginationItem[];\r\n}\r\n\r\n/**\r\n * The interface for each pagination item.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationItem {\r\n  li: HTMLLIElement;\r\n  button: HTMLButtonElement;\r\n  page: number;\r\n}\r\n\r\n/**\r\n * The component for the pagination UI (a slide picker).\r\n *\r\n * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#grouped-carousel-elements\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Pagination component object.\r\n */\r\nexport function Pagination( Splide: Splide, Components: Components, options: Options ): PaginationComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, emit, bind } = event;\r\n  const { Slides, Elements, Controller } = Components;\r\n  const { hasFocus, getIndex, go } = Controller;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * Stores all pagination items.\r\n   */\r\n  const items: PaginationItem[] = [];\r\n\r\n  /**\r\n   * The pagination element.\r\n   */\r\n  let list: HTMLUListElement | null;\r\n\r\n  /**\r\n   * Holds modifier classes.\r\n   */\r\n  let paginationClasses: string;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    destroy();\r\n\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], mount );\r\n\r\n    if ( options.pagination && Slides.isEnough() ) {\r\n      on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED ], update );\r\n      createPagination();\r\n      update();\r\n      emit( EVENT_PAGINATION_MOUNTED, { list, items }, getAt( Splide.index ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    if ( list ) {\r\n      remove( Elements.pagination ? slice( list.children ) : list );\r\n      removeClass( list, paginationClasses );\r\n      empty( items );\r\n      list = null;\r\n    }\r\n\r\n    event.destroy();\r\n  }\r\n\r\n  /**\r\n   * Creates the pagination element and appends it to the slider.\r\n   */\r\n  function createPagination(): void {\r\n    const { length } = Splide;\r\n    const { classes, i18n, perPage } = options;\r\n    const max = hasFocus() ? length : ceil( length / perPage );\r\n\r\n    list = Elements.pagination || create( 'ul', classes.pagination, Elements.track.parentElement );\r\n\r\n    addClass( list, ( paginationClasses = `${ CLASS_PAGINATION }--${ getDirection() }` ) );\r\n    setAttribute( list, ROLE, 'tablist' );\r\n    setAttribute( list, ARIA_LABEL, i18n.select );\r\n    setAttribute( list, ARIA_ORIENTATION, getDirection() === TTB ? 'vertical' : '' );\r\n\r\n    for ( let i = 0; i < max; i++ ) {\r\n      const li       = create( 'li', null, list );\r\n      const button   = create( 'button', { class: classes.page, type: 'button' }, li );\r\n      const controls = Slides.getIn( i ).map( Slide => Slide.slide.id );\r\n      const text     = ! hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\r\n\r\n      bind( button, 'click', apply( onClick, i ) );\r\n\r\n      if ( options.paginationKeyboard ) {\r\n        bind( button, 'keydown', apply( onKeydown, i ) );\r\n      }\r\n\r\n      setAttribute( li, ROLE, 'presentation' );\r\n      setAttribute( button, ROLE, 'tab' );\r\n      setAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\r\n      setAttribute( button, ARIA_LABEL, format( text, i + 1 ) );\r\n      setAttribute( button, TAB_INDEX, -1 );\r\n\r\n      items.push( { li, button, page: i } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks each pagination dot.\r\n   * Moves the focus to the active slide for accessibility.\r\n   *\r\n   * @link https://www.w3.org/WAI/tutorials/carousels/functionality/\r\n   *\r\n   * @param page - A clicked page index.\r\n   */\r\n  function onClick( page: number ): void {\r\n    go( `>${ page }`, true );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the pagination.\r\n   *\r\n   * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#keyboard-interaction-21\r\n   *\r\n   * @param page - A page index.\r\n   * @param e    - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( page: number, e: KeyboardEvent ): void {\r\n    const { length } = items;\r\n    const key = normalizeKey( e );\r\n    const dir = getDirection();\r\n\r\n    let nextPage = -1;\r\n\r\n    if ( key === resolve( ARROW_RIGHT, false, dir ) ) {\r\n      nextPage = ++page % length;\r\n    } else if ( key === resolve( ARROW_LEFT, false, dir ) ) {\r\n      nextPage = ( --page + length ) % length;\r\n    } else if ( key === 'Home' ) {\r\n      nextPage = 0;\r\n    } else if ( key === 'End' ) {\r\n      nextPage = length - 1;\r\n    }\r\n\r\n    const item = items[ nextPage ];\r\n\r\n    if ( item ) {\r\n      focus( item.button );\r\n      go( `>${ nextPage }` );\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the latest direction for pagination.\r\n   */\r\n  function getDirection(): Options['direction'] {\r\n    return options.paginationDirection || options.direction;\r\n  }\r\n\r\n  /**\r\n   * Returns the pagination item at the specified index.\r\n   *\r\n   * @param index - An index.\r\n   *\r\n   * @return A pagination item object if available, or otherwise `undefined`.\r\n   */\r\n  function getAt( index: number ): PaginationItem | undefined {\r\n    return items[ Controller.toPage( index ) ];\r\n  }\r\n\r\n  /**\r\n   * Updates the pagination status.\r\n   */\r\n  function update(): void {\r\n    const prev = getAt( getIndex( true ) );\r\n    const curr = getAt( getIndex() );\r\n\r\n    if ( prev ) {\r\n      const { button } = prev;\r\n      removeClass( button, CLASS_ACTIVE );\r\n      removeAttribute( button, ARIA_SELECTED );\r\n      setAttribute( button, TAB_INDEX, -1 );\r\n    }\r\n\r\n    if ( curr ) {\r\n      const { button } = curr;\r\n      addClass( button, CLASS_ACTIVE );\r\n      setAttribute( button, ARIA_SELECTED, true );\r\n      setAttribute( button, TAB_INDEX, '' );\r\n    }\r\n\r\n    emit( EVENT_PAGINATION_UPDATED, { list, items }, prev, curr );\r\n  }\r\n\r\n  return {\r\n    items,\r\n    mount,\r\n    destroy,\r\n    getAt,\r\n    update,\r\n  };\r\n}\r\n","import { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { MOVING } from '../../constants/states';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, prevent, timeOf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Wheel component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface WheelComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for observing the mouse wheel and moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Wheel component object.\r\n */\r\nexport function Wheel( Splide: Splide, Components: Components, options: Options ): WheelComponent {\r\n  const { bind } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Holds the last time when the wheel moves the slider.\r\n   */\r\n  let lastTime = 0;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.wheel ) {\r\n      bind( Components.Elements.track, 'wheel', onWheel, SCROLL_LISTENER_OPTIONS );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user rotates the mouse wheel on the slider.\r\n   *\r\n   * @param e - A WheelEvent object.\r\n   */\r\n  function onWheel( e: WheelEvent ): void {\r\n    if ( e.cancelable ) {\r\n      const { deltaY } = e;\r\n      const backwards = deltaY < 0;\r\n      const timeStamp = timeOf( e );\r\n      const min       = options.wheelMinThreshold || 0;\r\n      const sleep     = options.wheelSleep || 0;\r\n\r\n      if ( abs( deltaY ) > min && timeStamp - lastTime > sleep ) {\r\n        Splide.go( backwards ? '<' : '>' );\r\n        lastTime = timeStamp;\r\n      }\r\n\r\n      shouldPrevent( backwards ) && prevent( e );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether the component should prevent the default action of the wheel event or not.\r\n   *\r\n   * @param backwards - Set this to `true` for backwards direction.\r\n   *\r\n   * @return `true` if the action should be prevented.\r\n   */\r\n  function shouldPrevent( backwards: boolean ): boolean {\r\n    return ! options.releaseWheel\r\n      || Splide.state.is( MOVING )\r\n      || Components.Controller.getAdjacent( backwards ) !== -1;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n  };\r\n}\r\n","import { ARIA_LIVE, ARIA_RELEVANT } from '../../constants/attributes';\r\nimport { CLASS_SR } from '../../constants/classes';\r\nimport { EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_MOVED, EVENT_SCROLLED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { append, apply, create, remove, removeAttribute, setAttribute } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Live component.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport interface LiveComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * The component for implementing Live Region to the slider.\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\r\n *\r\n * @since 4.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Live component object.\r\n */\r\nexport function Live( Splide: Splide, Components: Components, options: Options ): LiveComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { track } = Components.Elements;\r\n  const { live } = options;\r\n\r\n  /**\r\n   * Indicates whether the live region is enabled or not.\r\n   */\r\n  const enabled = live && ! options.isNavigation;\r\n\r\n  /**\r\n   * The span element for the SR only text.\r\n   */\r\n  const sr = create( 'span', CLASS_SR );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * The `aria-relevant` attribute is important to prevent SR from reading contents twice.\r\n   */\r\n  function mount(): void {\r\n    if ( enabled ) {\r\n      disable( ! Components.Autoplay.isPaused() );\r\n      setAttribute( track, ARIA_RELEVANT, 'additions' );\r\n      sr.textContent = '…';\r\n\r\n      on( EVENT_AUTOPLAY_PLAY, apply( disable, true ) );\r\n      on( EVENT_AUTOPLAY_PAUSE, apply( disable, false ) );\r\n      on( [ EVENT_MOVED, EVENT_SCROLLED ], apply( append, track, sr ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    removeAttribute( track, [ ARIA_LIVE, ARIA_RELEVANT ] );\r\n    remove( sr );\r\n  }\r\n\r\n  /**\r\n   * Disables/enables the live region.\r\n   * Does nothing when the `live` option is not enabled.\r\n   *\r\n   * @param disabled - `true` to disable the live region or `false` to enable it again.\r\n   */\r\n  function disable( disabled: boolean ): void {\r\n    if ( enabled ) {\r\n      setAttribute( track, ARIA_LIVE, disabled ? 'off' : 'polite' );\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    destroy,\r\n  };\r\n}","import { Options } from '../types';\r\nimport { CLASSES } from './classes';\r\nimport { I18N } from './i18n';\r\n\r\n\r\n/**\r\n * The collection of default options.\r\n * Note that this collection does not contain all options.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULTS: Options = {\r\n  type              : 'slide',\r\n  role              : 'region',\r\n  speed             : 400,\r\n  perPage           : 1,\r\n  cloneStatus       : true,\r\n  arrows            : true,\r\n  pagination        : true,\r\n  paginationKeyboard: true,\r\n  interval          : 5000,\r\n  pauseOnHover      : true,\r\n  pauseOnFocus      : true,\r\n  resetProgress     : true,\r\n  easing            : 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  drag              : true,\r\n  direction         : 'ltr',\r\n  trimSpace         : true,\r\n  focusableNodes    : 'a, button, textarea, input, select, iframe',\r\n  live              : true,\r\n  classes           : CLASSES,\r\n  i18n              : I18N,\r\n  reducedMotion: {\r\n    speed      : 0,\r\n    rewindSpeed: 0,\r\n    autoplay   : 'pause',\r\n  },\r\n};","/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const I18N = {\r\n  prev      : 'Previous slide',\r\n  next      : 'Next slide',\r\n  first     : 'Go to first slide',\r\n  last      : 'Go to last slide',\r\n  slideX    : 'Go to slide %s',\r\n  pageX     : 'Go to page %s',\r\n  play      : 'Start autoplay',\r\n  pause     : 'Pause autoplay',\r\n  carousel  : 'carousel',\r\n  slide     : 'slide',\r\n  select    : 'Select a slide to show',\r\n  slideLabel: '%s of %s', // [ slide number ] / [ slide size ]\r\n};\r\n","import { EVENT_MOUNTED, EVENT_REFRESH } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { nextTick, noop, rect, unit, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the fade transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Fade( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { on } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * The nextTick disables the initial fade transition of the first slide.\r\n   */\r\n  function mount(): void {\r\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\r\n      nextTick( () => {\r\n        Components.Slides.style( 'transition', `opacity ${ options.speed }ms ${ options.easing }` );\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * Explicitly sets the track height to avoid it will collapse in Safari.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const { track } = Components.Elements;\r\n    style( track, 'height', unit( rect( track ).height ) );\r\n\r\n    nextTick( () => {\r\n      done();\r\n      style( track, 'height', '' );\r\n    } );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel: noop,\r\n  };\r\n}\r\n","import { SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, apply, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the slide transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Slide( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { bind } = EventInterface( Splide );\r\n  const { Move, Controller, Scroll } = Components;\r\n  const { list } = Components.Elements;\r\n  const transition = apply( style, list, 'transition' );\r\n\r\n  /**\r\n   * Holds the `done` callback function.\r\n   */\r\n  let endCallback: () => void;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( list, 'transitionend', e => {\r\n      if ( e.target === list && endCallback ) {\r\n        cancel();\r\n        endCallback();\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * The Move component calls this method just before the slider moves.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const destination = Move.toPosition( index, true );\r\n    const position    = Move.getPosition();\r\n    const speed       = getSpeed( index );\r\n\r\n    if ( abs( destination - position ) >= 1 && speed >= 1 ) {\r\n      if ( options.useScroll ) {\r\n        Scroll.scroll( destination, speed, false, done );\r\n      } else {\r\n        transition( `transform ${ speed }ms ${ options.easing }` );\r\n        Move.translate( destination, true );\r\n        endCallback = done;\r\n      }\r\n    } else {\r\n      Move.jump( index );\r\n      done();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the transition.\r\n   */\r\n  function cancel(): void {\r\n    transition( '' );\r\n    Scroll.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the transition speed.\r\n   *\r\n   * @param index - A destination index.\r\n   */\r\n  function getSpeed( index: number ): number {\r\n    const { rewindSpeed } = options;\r\n\r\n    if ( Splide.is( SLIDE ) && rewindSpeed ) {\r\n      const prev = Controller.getIndex( true );\r\n      const end  = Controller.getEnd();\r\n\r\n      if ( ( prev === 0 && index >= end ) || ( prev >= end && index === 0 ) ) {\r\n        return rewindSpeed;\r\n      }\r\n    }\r\n\r\n    return options.speed;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel,\r\n  };\r\n}\r\n","import * as ComponentConstructors from '../../components';\r\nimport { SlideMatcher } from '../../components/Slides/Slides';\r\nimport { CLASS_INITIALIZED } from '../../constants/classes';\r\nimport { DEFAULTS } from '../../constants/defaults';\r\nimport { EVENT_DESTROY, EVENT_MOUNTED, EVENT_READY, EVENT_REFRESH } from '../../constants/events';\r\nimport { DATA_ATTRIBUTE } from '../../constants/project';\r\nimport { CREATED, DESTROYED, IDLE, STATES } from '../../constants/states';\r\nimport { FADE } from '../../constants/types';\r\nimport { EventInterface, EventInterfaceObject, State, StateObject } from '../../constructors';\r\nimport { Fade, Slide } from '../../transitions';\r\nimport { AnyFunction, ComponentConstructor, Components, EventMap, Options, SyncTarget } from '../../types';\r\nimport { addClass, assert, assign, empty, forOwn, getAttribute, isString, merge, query, slice } from '../../utils';\r\nimport { ARIA_LABEL, ARIA_LABELLEDBY } from '../../constants/attributes';\r\n\r\n\r\n/**\r\n * The frontend class for the Splide slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class Splide {\r\n  /**\r\n   * Changes the default options for all Splide instances.\r\n   */\r\n  static defaults: Options = {};\r\n\r\n  /**\r\n   * The collection of state numbers.\r\n   */\r\n  static readonly STATES = STATES;\r\n\r\n  /**\r\n   * The root element where the Splide is applied.\r\n   */\r\n  readonly root: HTMLElement;\r\n\r\n  /**\r\n   * The EventBusObject object.\r\n   */\r\n  readonly event: EventInterfaceObject = EventInterface();\r\n\r\n  /**\r\n   * The collection of all component objects.\r\n   */\r\n  readonly Components: Components = {} as Components;\r\n\r\n  /**\r\n   * The StateObject object.\r\n   */\r\n  readonly state: StateObject = State( CREATED );\r\n\r\n  /**\r\n   * An array with SyncTarget objects for splide instances to sync with.\r\n   */\r\n  readonly splides: SyncTarget[] = [];\r\n\r\n  /**\r\n   * The current options.\r\n   */\r\n  private readonly _o: Options = {};\r\n\r\n  /**\r\n   * The collection of all components.\r\n   */\r\n  private _C: Components;\r\n\r\n  /**\r\n   * The collection of extensions.\r\n   */\r\n  private _E: Record<string, ComponentConstructor> = {};\r\n\r\n  /**\r\n   * The Transition component.\r\n   */\r\n  private _T: ComponentConstructor;\r\n\r\n  /**\r\n   * The Splide constructor.\r\n   *\r\n   * @param target  - The selector for the target element, or the element itself.\r\n   * @param options - Optional. An object with options.\r\n   */\r\n  constructor( target: string | HTMLElement, options?: Options ) {\r\n    const root = isString( target ) ? query<HTMLElement>( document, target ) : target;\r\n    assert( root, `${ root } is invalid.` );\r\n\r\n    this.root = root;\r\n\r\n    options = merge( {\r\n      label     : getAttribute( root, ARIA_LABEL ) || '',\r\n      labelledby: getAttribute( root, ARIA_LABELLEDBY ) || '',\r\n    }, DEFAULTS, Splide.defaults, options || {} );\r\n\r\n    try {\r\n      merge( options, JSON.parse( getAttribute( root, DATA_ATTRIBUTE ) ) );\r\n    } catch ( e ) {\r\n      assert( false, 'Invalid JSON' );\r\n    }\r\n\r\n    this._o = Object.create( merge( {}, options ) );\r\n  }\r\n\r\n  /**\r\n   * Initializes the instance.\r\n   *\r\n   * @param Extensions - Optional. An object with extensions.\r\n   * @param Transition - Optional. A Transition component.\r\n   *\r\n   * @return `this`\r\n   */\r\n  mount( Extensions?: Record<string, ComponentConstructor>, Transition?: ComponentConstructor ): this {\r\n    const { state, Components } = this;\r\n    assert( state.is( [ CREATED, DESTROYED ] ), 'Already mounted!' );\r\n\r\n    state.set( CREATED );\r\n\r\n    this._C = Components;\r\n    this._T = Transition || this._T || ( this.is( FADE ) ? Fade : Slide );\r\n    this._E = Extensions || this._E;\r\n\r\n    const Constructors = assign( {}, ComponentConstructors, this._E, { Transition: this._T } );\r\n\r\n    forOwn( Constructors, ( Component, key ) => {\r\n      const component = Component( this, Components, this._o );\r\n      Components[ key ] = component;\r\n      component.setup && component.setup();\r\n    } );\r\n\r\n    forOwn( Components, component => {\r\n      component.mount && component.mount();\r\n    } );\r\n\r\n    this.emit( EVENT_MOUNTED );\r\n\r\n    addClass( this.root, CLASS_INITIALIZED );\r\n\r\n    state.set( IDLE );\r\n    this.emit( EVENT_READY );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Syncs the slider with the provided one.\r\n   * This method must be called before the `mount()`.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var primary   = new Splide();\r\n   * var secondary = new Splide();\r\n   *\r\n   * primary.sync( secondary );\r\n   * primary.mount();\r\n   * secondary.mount();\r\n   * ```\r\n   *\r\n   * @param splide - A Splide instance to sync with.\r\n   *\r\n   * @return `this`\r\n   */\r\n  sync( splide: Splide ): this {\r\n    this.splides.push( { splide } );\r\n    splide.splides.push( { splide: this, isParent: true } );\r\n\r\n    if ( this.state.is( IDLE ) ) {\r\n      this._C.Sync.remount();\r\n      splide.Components.Sync.remount();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Moves the slider with the following control pattern.\r\n   *\r\n   * | Pattern | Description |\r\n   * |---|---|\r\n   * | `i` | Goes to the slide `i` |\r\n   * | `'+${i}'` | Increments the slide index by `i` |\r\n   * | `'-${i}'` | Decrements the slide index by `i` |\r\n   * | `'>'` | Goes to the next page |\r\n   * | `'<'` | Goes to the previous page |\r\n   * | `>${i}` | Goes to the page `i` |\r\n   *\r\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\r\n   * because they respect `perPage` and `perMove` options.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Goes to the slide 1:\r\n   * splide.go( 1 );\r\n   *\r\n   * // Increments the index:\r\n   * splide.go( '+2' );\r\n   *\r\n   * // Goes to the next page:\r\n   * splide.go( '>' );\r\n   *\r\n   * // Goes to the page 2:\r\n   * splide.go( '>2' );\r\n   * ```\r\n   *\r\n   * @param control - A control pattern.\r\n   *\r\n   * @return `this`\r\n   */\r\n  go( control: number | string ): this {\r\n    this._C.Controller.go( control );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers an event handler.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Listens to a single event:\r\n   * splide.on( 'move', function() {} );\r\n   *\r\n   * // Listens to multiple events:\r\n   * splide.on( 'move resize', function() {} );\r\n   *\r\n   * // Appends a namespace:\r\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\r\n   * ```\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   * @param callback - A callback function.\r\n   *\r\n   * @return `this`\r\n   */\r\n  on<K extends keyof EventMap>( events: K, callback: EventMap[ K ] ): this;\r\n  on( events: string | string[], callback: AnyFunction ): this;\r\n  on( events: string | string[], callback: AnyFunction ): this {\r\n    this.event.on( events, callback );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the registered all handlers for the specified event or events.\r\n   * If you want to only remove a particular handler, use namespace to identify it.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Removes all handlers assigned to \"move\":\r\n   * splide.off( 'move' );\r\n   *\r\n   * // Only removes handlers that belong to the specified namespace:\r\n   * splide.off( 'move.myNamespace' );\r\n   * ```\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   *\r\n   * @return `this`\r\n   */\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): this {\r\n    this.event.off( events );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Emits an event and triggers registered handlers.\r\n   *\r\n   * @param event - An event name to emit.\r\n   * @param args  - Optional. Any number of arguments to pass to handlers.\r\n   *\r\n   * @return `this`\r\n   */\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): this;\r\n  emit( event: string, ...args: any[] ): this;\r\n  emit( event: string ): this {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    this.event.emit( event, ...slice( arguments, 1 ) );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide at the specified position.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   * splide.mount();\r\n   *\r\n   * // Adds the slide by the HTML:\r\n   * splide.add( '<li></li> );\r\n   *\r\n   * // or adds the element:\r\n   * splide.add( document.createElement( 'li' ) );\r\n   * ```\r\n   *\r\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\r\n   * @param index  - Optional. An index to insert a slide at.\r\n   *\r\n   * @return `this`\r\n   */\r\n  add( slides: string | HTMLElement | Array<string | HTMLElement>, index?: number ): this {\r\n    this._C.Slides.add( slides, index );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  remove( matcher: SlideMatcher ): this {\r\n    this._C.Slides.remove( matcher );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Checks the slider type.\r\n   *\r\n   * @param type - A type to test.\r\n   *\r\n   * @return `true` if the type matches the current one, or otherwise `false`.\r\n   */\r\n  is( type: string ): boolean {\r\n    return this._o.type === type;\r\n  }\r\n\r\n  /**\r\n   * Refreshes the slider.\r\n   *\r\n   * @return `this`\r\n   */\r\n  refresh(): this {\r\n    this.emit( EVENT_REFRESH );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Destroys the slider.\r\n   *\r\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\r\n   *\r\n   * @return `this`\r\n   */\r\n  destroy( completely = true ): this {\r\n    const { event, state } = this;\r\n\r\n    if ( state.is( CREATED ) ) {\r\n      // Postpones destruction requested before the slider becomes ready.\r\n      EventInterface( this ).on( EVENT_READY, this.destroy.bind( this, completely ) );\r\n    } else {\r\n      forOwn( this._C, component => {\r\n        component.destroy && component.destroy( completely );\r\n      }, true );\r\n\r\n      event.emit( EVENT_DESTROY );\r\n      event.destroy();\r\n      completely && empty( this.splides );\r\n      state.set( DESTROYED );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns options.\r\n   *\r\n   * @return An object with the latest options.\r\n   */\r\n  get options(): Options {\r\n    return this._o;\r\n  }\r\n\r\n  /**\r\n   * Merges options to the current options and emits `updated` event.\r\n   *\r\n   * @param options - An object with new options.\r\n   */\r\n  set options( options: Options ) {\r\n    this._C.Media.set( options, true );\r\n  }\r\n\r\n  /**\r\n   * Returns the number of slides without clones.\r\n   *\r\n   * @return The number of slides.\r\n   */\r\n  get length(): number {\r\n    return this._C.Slides.getLength( true );\r\n  }\r\n\r\n  /**\r\n   * Returns the active slide index.\r\n   *\r\n   * @return The active slide index.\r\n   */\r\n  get index(): number {\r\n    return this._C.Controller.getIndex();\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Splide from './splide-4.0.2/dist/js/splide.min.js';\n\nconsole.log( Splide );\nnew Splide( '.splide' ).mount();\n"],"names":["MEDIA_PREFERS_REDUCED_MOTION","MOVING","SCROLLING","STATES","CREATED","MOUNTED","IDLE","DRAGGING","DESTROYED","empty","array","length","slice","arrayLike","start","end","Array","prototype","call","apply","func","bind","concat","arguments","noop","nextTick","setTimeout","raf","requestAnimationFrame","typeOf","type","subject","isObject","isNull","isArray","isFunction","isString","isUndefined","isHTMLElement","HTMLElement","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","toggleClass","elm","classes","add","name","classList","addClass","split","append","parent","children","appendChild","before","nodes","ref","node","parentNode","insertBefore","matches","selector","msMatchesSelector","children2","filter","child","firstElementChild","ownKeys","Object","keys","forOwn","object","right","reverse","i","key","assign","source","merge","omit","removeAttribute","elms","attrs","attr","setAttribute","value2","String","create","tag","document","createElement","style","prop","getComputedStyle","display","display2","focus","setActive","preventScroll","getAttribute","hasClass","className","contains","rect","target","getBoundingClientRect","remove","removeChild","parseHtml","html","DOMParser","parseFromString","body","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","removeClass","timeOf","timeStamp","unit","PROJECT_CODE","DATA_ATTRIBUTE","assert","condition","message","Error","min","Math","max","floor","ceil","abs","approximatelyEqual","x","y","epsilon","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","sign","format","string","replacements","replacement","replace","pad","ids","EventBinder","listeners","forEachEvent","targets","events","events2","eventNS","fragment","callback","options","event","namespace","isEventTarget","remover","removeEventListener","removeListener","addEventListener","addListener","unbind","listener","dispatch","detail","CustomEvent","bubbles","createEvent","initCustomEvent","dispatchEvent","destroy","data","EVENT_MOUNTED","EVENT_MOVE","EVENT_MOVED","EVENT_SHIFTED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","bus","createDocumentFragment","binder","on","join","off","emit","RequestInterval","interval","onInterval","onUpdate","limit","startTime","id","now","Date","rate","paused","count","update","pause","cancel","cancelAnimationFrame","resume","rewind","set","time","isPaused","State","initialState","state","is","states","ARROW","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","TTB","ORIENTATION_MAP","width","left","X","Y","ArrowLeft","ArrowRight","ROLE","TAB_INDEX","ARIA_PREFIX","ARIA_CONTROLS","ARIA_CURRENT","ARIA_SELECTED","ARIA_LABEL","ARIA_LABELLEDBY","ARIA_HIDDEN","ARIA_ORIENTATION","ARIA_ROLEDESCRIPTION","ARIA_LIVE","ARIA_RELEVANT","ALL_ATTRIBUTES","CLASS_ROOT","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS_BAR","CLASS_TOGGLE","CLASS_SR","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","CLASS_FOCUS_IN","STATUS_CLASSES","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","SLIDE","LOOP","FADE","Slide","index","slideIndex","slide","destroyed","Components","root","isNavigation","updateOnMove","i18n","pagination","slideFocus","resolve","Direction","styles","label","isClone","container","focusableNodes","initNavigation","controls","splides","map","Slide2","splide","Slides","getAt","slideX","onMove","curr","active","isActive","self","visible","trackRect","Elements","track","slideRect","isVisible","hidden","activeElement","updateVisibility","cloneStatus","mount","slideLabel","useContainer","_style","isWithin","from","distance","diff","INTERVAL_DATA_ATTRIBUTE","SCROLL_LISTENER_OPTIONS","passive","capture","NORMALIZATION_MAP","Spacebar","Right","Left","Up","Down","normalizeKey","KEYBOARD_EVENT","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","__proto__","Media","Components2","breakpoints","reducedMotion","queries","completely","register","options2","queryList","matchMedia","direction","merged","reduce","merged2","entry","refresh","opts","user","getPrototypeOf","setup","isMin","mediaQuery","sort","n","m","enable","axisOnly","match","offset","toLowerCase","charAt","toUpperCase","orient","list","isUsingKey","elements","slides","rootClasses","trackClasses","find","arrows","prev","next","bar","toggle","prefix","uniqueId","role","tagName","carousel","init","getClasses","labelledby","closest","nodeType","parentElement","base","drag","Slides2","get","excludeClones","matcher","Slide1","getIn","page","Controller","toIndex","hasFocus","perPage","forEachItem","images","img","removeNode","getLength","isEnough","vertical","rootRect","styleSlides","cssPadding","resize","newRect","height","cssHeight","cssTrackHeight","gap","autoWidth","fixedWidth","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","getGap","parseFloat","duration","window","listSize","slideSize","sliderSize","getPadding","Clones","cloneCount","clones","computeCloneCount","isHead","clone","cloneNode","cloneDeep","generate","observe","fixedSize","clones2","Layout","Transition","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","destination","exceededMin","exceededMax","getPosition","exceededLimit","shift","loop","backwards","excess","getLimit","size","trimming","trimSpace","trim","getEnd","move","dest","shifted","minDistance","Infinity","slideCount","perMove","Move","isLoop","isSlide","getNext","getAdjacent","getPrev","currIndex","prevIndex","computeDestIndex","snapPage","computeMovableDestIndex","toPage","setIndex","waitForTransition","go","control","allowSameIndex","indicator","parse","scroll","snap","getIndex","toDest","created","wrapperClasses","userArrows","wrapper","enabled","createArrow","remount","prev2","arrow","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","hovered","focused","autoplay","stopped","play","resetProgress","stop","autoToggle","pauseOnHover","pauseOnFocus","listen","cover","cover2","src","friction","onScrolled","noConstrain","clear","noDistance","onEnd","to","t","easingFunc","pow","basePosition","baseEvent","prevBaseEvent","isFree","dragging","clickPrevented","exceeded","disable","onPointerDown","isTouch","target2","noDrag","isTouchEvent","button","onPointerMove","onPointerUp","save","thresholds","isObj","cancelable","diffCoord","expired","diffTime","hasExceeded","dragMinThreshold","mouse","touch","velocity","computeVelocity","flickPower","flickMaxPages","computeDestination","rewindByDrag","onClick","orthogonal","coordOf","getBaseEvent","changedTouches","TouchEvent","isDragging","keyboard","onKeydown","_disabled","isSequential","lazyLoad","entries","srcset","spinner","loadNext","preloadPages","load","onLoad","paginationClasses","dir","getDirection","nextPage","item","paginationDirection","select","li","class","text","pageX","paginationKeyboard","createPagination","isParent","sync","lastTime","onWheel","deltaY","sleep","wheelMinThreshold","wheelSleep","releaseWheel","wheel","live","sr","Autoplay","textContent","DEFAULTS","speed","easing","rewindSpeed","Fade","done","endCallback","transition","getSpeed","useScroll","Splide","_o","_E","_Splide","defaults","JSON","Extensions","this","_C","_T","ComponentConstructors","Component","component","_this","Sync","console","log"],"sourceRoot":""}